{"ast":null,"code":"// ag-grid-react v30.0.4\nimport { getRowContainerTypeForName, RowContainerCtrl, RowContainerName } from 'ag-grid-community';\nimport React, { useMemo, useRef, useState, memo, useContext } from 'react';\nimport { classesList, agFlushSync } from '../utils.mjs';\nimport useReactCommentEffect from '../reactComment.mjs';\nimport RowComp from './rowComp.mjs';\nimport { BeansContext } from '../beansContext.mjs';\nimport { useLayoutEffectOnce } from '../useEffectOnce.mjs';\nconst RowContainerComp = params => {\n  const {\n    context\n  } = useContext(BeansContext);\n  const [rowCtrlsOrdered, setRowCtrlsOrdered] = useState([]);\n  const {\n    name\n  } = params;\n  const containerType = useMemo(() => getRowContainerTypeForName(name), [name]);\n  const eWrapper = useRef(null);\n  const eViewport = useRef(null);\n  const eContainer = useRef(null);\n  const rowCtrlsRef = useRef([]);\n  const domOrderRef = useRef(false);\n  const cssClasses = useMemo(() => RowContainerCtrl.getRowContainerCssClasses(name), [name]);\n  const wrapperClasses = useMemo(() => classesList(cssClasses.wrapper), []);\n  const viewportClasses = useMemo(() => classesList(cssClasses.viewport), []);\n  const containerClasses = useMemo(() => classesList(cssClasses.container), []);\n  // no need to useMemo for boolean types\n  const template1 = name === RowContainerName.CENTER;\n  const template2 = name === RowContainerName.TOP_CENTER || name === RowContainerName.BOTTOM_CENTER || name === RowContainerName.STICKY_TOP_CENTER;\n  const template3 = !template1 && !template2;\n  const topLevelRef = template1 ? eWrapper : template2 ? eViewport : eContainer;\n  useReactCommentEffect(' AG Row Container ' + name + ' ', topLevelRef);\n  // if domOrder=true, then we just copy rowCtrls into rowCtrlsOrdered observing order,\n  // however if false, then we need to keep the order as they are in the dom, otherwise rowAnimation breaks\n  function updateRowCtrlsOrdered(useFlushSync) {\n    agFlushSync(useFlushSync, () => {\n      setRowCtrlsOrdered(prev => {\n        const rowCtrls = rowCtrlsRef.current;\n        if (domOrderRef.current) {\n          return rowCtrls;\n        }\n        // if dom order not important, we don't want to change the order\n        // of the elements in the dom, as this would break transition styles\n        const oldRows = prev.filter(r => rowCtrls.indexOf(r) >= 0);\n        const newRows = rowCtrls.filter(r => oldRows.indexOf(r) < 0);\n        return [...oldRows, ...newRows];\n      });\n    });\n  }\n  useLayoutEffectOnce(() => {\n    const beansToDestroy = [];\n    const compProxy = {\n      setViewportHeight: height => {\n        if (eViewport.current) {\n          eViewport.current.style.height = height;\n        }\n      },\n      setRowCtrls: (rowCtrls, useFlushSync) => {\n        if (rowCtrlsRef.current !== rowCtrls) {\n          const useFlush = useFlushSync && rowCtrlsRef.current.length > 0 && rowCtrls.length > 0;\n          rowCtrlsRef.current = rowCtrls;\n          updateRowCtrlsOrdered(useFlush);\n        }\n      },\n      setDomOrder: domOrder => {\n        if (domOrderRef.current != domOrder) {\n          domOrderRef.current = domOrder;\n          updateRowCtrlsOrdered(false);\n        }\n      },\n      setContainerWidth: width => {\n        if (eContainer.current) {\n          eContainer.current.style.width = width;\n        }\n      }\n    };\n    const ctrl = context.createBean(new RowContainerCtrl(name));\n    beansToDestroy.push(ctrl);\n    ctrl.setComp(compProxy, eContainer.current, eViewport.current, eWrapper.current);\n    return () => {\n      context.destroyBeans(beansToDestroy);\n    };\n  });\n  const buildContainer = () => React.createElement(\"div\", {\n    className: containerClasses,\n    ref: eContainer,\n    role: rowCtrlsOrdered.length ? \"rowgroup\" : \"presentation\"\n  }, rowCtrlsOrdered.map(rowCtrl => React.createElement(RowComp, {\n    rowCtrl: rowCtrl,\n    containerType: containerType,\n    key: rowCtrl.getInstanceId()\n  })));\n  return React.createElement(React.Fragment, null, template1 && React.createElement(\"div\", {\n    className: wrapperClasses,\n    ref: eWrapper,\n    role: \"presentation\"\n  }, React.createElement(\"div\", {\n    className: viewportClasses,\n    ref: eViewport,\n    role: \"presentation\"\n  }, buildContainer())), template2 && React.createElement(\"div\", {\n    className: viewportClasses,\n    ref: eViewport,\n    role: \"presentation\"\n  }, buildContainer()), template3 && buildContainer());\n};\nexport default memo(RowContainerComp);","map":{"version":3,"names":["getRowContainerTypeForName","RowContainerCtrl","RowContainerName","React","useMemo","useRef","useState","memo","useContext","classesList","agFlushSync","useReactCommentEffect","RowComp","BeansContext","useLayoutEffectOnce","RowContainerComp","params","context","rowCtrlsOrdered","setRowCtrlsOrdered","name","containerType","eWrapper","eViewport","eContainer","rowCtrlsRef","domOrderRef","cssClasses","getRowContainerCssClasses","wrapperClasses","wrapper","viewportClasses","viewport","containerClasses","container","template1","CENTER","template2","TOP_CENTER","BOTTOM_CENTER","STICKY_TOP_CENTER","template3","topLevelRef","updateRowCtrlsOrdered","useFlushSync","prev","rowCtrls","current","oldRows","filter","r","indexOf","newRows","beansToDestroy","compProxy","setViewportHeight","height","style","setRowCtrls","useFlush","length","setDomOrder","domOrder","setContainerWidth","width","ctrl","createBean","push","setComp","destroyBeans","buildContainer","createElement","className","ref","role","map","rowCtrl","key","getInstanceId","Fragment"],"sources":["/home/vvdn/React-practice/hello/node_modules/ag-grid-react/lib/reactUi/rows/rowContainerComp.mjs"],"sourcesContent":["// ag-grid-react v30.0.4\nimport { getRowContainerTypeForName, RowContainerCtrl, RowContainerName } from 'ag-grid-community';\nimport React, { useMemo, useRef, useState, memo, useContext } from 'react';\nimport { classesList, agFlushSync } from '../utils.mjs';\nimport useReactCommentEffect from '../reactComment.mjs';\nimport RowComp from './rowComp.mjs';\nimport { BeansContext } from '../beansContext.mjs';\nimport { useLayoutEffectOnce } from '../useEffectOnce.mjs';\nconst RowContainerComp = (params) => {\n    const { context } = useContext(BeansContext);\n    const [rowCtrlsOrdered, setRowCtrlsOrdered] = useState([]);\n    const { name } = params;\n    const containerType = useMemo(() => getRowContainerTypeForName(name), [name]);\n    const eWrapper = useRef(null);\n    const eViewport = useRef(null);\n    const eContainer = useRef(null);\n    const rowCtrlsRef = useRef([]);\n    const domOrderRef = useRef(false);\n    const cssClasses = useMemo(() => RowContainerCtrl.getRowContainerCssClasses(name), [name]);\n    const wrapperClasses = useMemo(() => classesList(cssClasses.wrapper), []);\n    const viewportClasses = useMemo(() => classesList(cssClasses.viewport), []);\n    const containerClasses = useMemo(() => classesList(cssClasses.container), []);\n    // no need to useMemo for boolean types\n    const template1 = name === RowContainerName.CENTER;\n    const template2 = name === RowContainerName.TOP_CENTER\n        || name === RowContainerName.BOTTOM_CENTER\n        || name === RowContainerName.STICKY_TOP_CENTER;\n    const template3 = !template1 && !template2;\n    const topLevelRef = template1 ? eWrapper : template2 ? eViewport : eContainer;\n    useReactCommentEffect(' AG Row Container ' + name + ' ', topLevelRef);\n    // if domOrder=true, then we just copy rowCtrls into rowCtrlsOrdered observing order,\n    // however if false, then we need to keep the order as they are in the dom, otherwise rowAnimation breaks\n    function updateRowCtrlsOrdered(useFlushSync) {\n        agFlushSync(useFlushSync, () => {\n            setRowCtrlsOrdered(prev => {\n                const rowCtrls = rowCtrlsRef.current;\n                if (domOrderRef.current) {\n                    return rowCtrls;\n                }\n                // if dom order not important, we don't want to change the order\n                // of the elements in the dom, as this would break transition styles\n                const oldRows = prev.filter(r => rowCtrls.indexOf(r) >= 0);\n                const newRows = rowCtrls.filter(r => oldRows.indexOf(r) < 0);\n                return [...oldRows, ...newRows];\n            });\n        });\n    }\n    useLayoutEffectOnce(() => {\n        const beansToDestroy = [];\n        const compProxy = {\n            setViewportHeight: (height) => {\n                if (eViewport.current) {\n                    eViewport.current.style.height = height;\n                }\n            },\n            setRowCtrls: (rowCtrls, useFlushSync) => {\n                if (rowCtrlsRef.current !== rowCtrls) {\n                    const useFlush = useFlushSync && rowCtrlsRef.current.length > 0 && rowCtrls.length > 0;\n                    rowCtrlsRef.current = rowCtrls;\n                    updateRowCtrlsOrdered(useFlush);\n                }\n            },\n            setDomOrder: domOrder => {\n                if (domOrderRef.current != domOrder) {\n                    domOrderRef.current = domOrder;\n                    updateRowCtrlsOrdered(false);\n                }\n            },\n            setContainerWidth: width => {\n                if (eContainer.current) {\n                    eContainer.current.style.width = width;\n                }\n            }\n        };\n        const ctrl = context.createBean(new RowContainerCtrl(name));\n        beansToDestroy.push(ctrl);\n        ctrl.setComp(compProxy, eContainer.current, eViewport.current, eWrapper.current);\n        return () => {\n            context.destroyBeans(beansToDestroy);\n        };\n    });\n    const buildContainer = () => (React.createElement(\"div\", { className: containerClasses, ref: eContainer, role: rowCtrlsOrdered.length ? \"rowgroup\" : \"presentation\" }, rowCtrlsOrdered.map(rowCtrl => React.createElement(RowComp, { rowCtrl: rowCtrl, containerType: containerType, key: rowCtrl.getInstanceId() }))));\n    return (React.createElement(React.Fragment, null,\n        template1 &&\n            React.createElement(\"div\", { className: wrapperClasses, ref: eWrapper, role: \"presentation\" },\n                React.createElement(\"div\", { className: viewportClasses, ref: eViewport, role: \"presentation\" }, buildContainer())),\n        template2 &&\n            React.createElement(\"div\", { className: viewportClasses, ref: eViewport, role: \"presentation\" }, buildContainer()),\n        template3 && buildContainer()));\n};\nexport default memo(RowContainerComp);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}