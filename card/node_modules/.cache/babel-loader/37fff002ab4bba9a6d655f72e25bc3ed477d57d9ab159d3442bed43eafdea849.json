{"ast":null,"code":"// ag-grid-react v30.0.4\nimport { FocusService, GridCtrl } from 'ag-grid-community';\nimport React, { memo, useCallback, useEffect, useMemo, useRef, useState, useLayoutEffect } from 'react';\nimport { BeansContext } from './beansContext.mjs';\nimport GridBodyComp from './gridBodyComp.mjs';\nimport useReactCommentEffect from './reactComment.mjs';\nimport TabGuardComp from './tabGuardComp.mjs';\nimport { classesList } from './utils.mjs';\nconst GridComp = _ref => {\n  let {\n    context\n  } = _ref;\n  const [rtlClass, setRtlClass] = useState('');\n  const [keyboardFocusClass, setKeyboardFocusClass] = useState('');\n  const [layoutClass, setLayoutClass] = useState('');\n  const [cursor, setCursor] = useState(null);\n  const [userSelect, setUserSelect] = useState(null);\n  const [initialised, setInitialised] = useState(false);\n  const [tabGuardReady, setTabGuardReady] = useState();\n  const gridCtrlRef = useRef(null);\n  const eRootWrapperRef = useRef(null);\n  const tabGuardRef = useRef();\n  const eGridBodyParentRef = useRef(null);\n  const focusInnerElementRef = useRef(() => undefined);\n  const onTabKeyDown = useCallback(() => undefined, []);\n  const beans = useMemo(() => {\n    if (context.isDestroyed()) {\n      return null;\n    }\n    return context.getBean('beans');\n  }, [context]);\n  useReactCommentEffect(' AG Grid ', eRootWrapperRef);\n  // create shared controller.\n  useLayoutEffect(() => {\n    if (context.isDestroyed()) {\n      return;\n    }\n    const currentController = gridCtrlRef.current = context.createBean(new GridCtrl());\n    const gridCtrl = gridCtrlRef.current;\n    focusInnerElementRef.current = gridCtrl.focusInnerElement.bind(gridCtrl);\n    const compProxy = {\n      destroyGridUi: () => {},\n      setRtlClass: setRtlClass,\n      addOrRemoveKeyboardFocusClass: addOrRemove => setKeyboardFocusClass(addOrRemove ? FocusService.AG_KEYBOARD_FOCUS : ''),\n      forceFocusOutOfContainer: () => {\n        var _a;\n        (_a = tabGuardRef.current) === null || _a === void 0 ? void 0 : _a.forceFocusOutOfContainer();\n      },\n      updateLayoutClasses: setLayoutClass,\n      getFocusableContainers: () => {\n        var _a, _b;\n        const els = [];\n        const gridBodyCompEl = (_a = eRootWrapperRef.current) === null || _a === void 0 ? void 0 : _a.querySelector('.ag-root');\n        const sideBarEl = (_b = eRootWrapperRef.current) === null || _b === void 0 ? void 0 : _b.querySelector('.ag-side-bar:not(.ag-hidden)');\n        if (gridBodyCompEl) {\n          els.push(gridBodyCompEl);\n        }\n        if (sideBarEl) {\n          els.push(sideBarEl);\n        }\n        return els;\n      },\n      setCursor,\n      setUserSelect\n    };\n    gridCtrl.setComp(compProxy, eRootWrapperRef.current, eRootWrapperRef.current);\n    setInitialised(true);\n    return () => {\n      context.destroyBean(currentController);\n      gridCtrlRef.current = null;\n    };\n  }, [context]);\n  // initialise the extra components\n  useEffect(() => {\n    if (!tabGuardReady || !beans || !gridCtrlRef.current) {\n      return;\n    }\n    const gridCtrl = gridCtrlRef.current;\n    const beansToDestroy = [];\n    const {\n      agStackComponentsRegistry\n    } = beans;\n    const HeaderDropZonesClass = agStackComponentsRegistry.getComponentClass('AG-GRID-HEADER-DROP-ZONES');\n    const SideBarClass = agStackComponentsRegistry.getComponentClass('AG-SIDE-BAR');\n    const StatusBarClass = agStackComponentsRegistry.getComponentClass('AG-STATUS-BAR');\n    const WatermarkClass = agStackComponentsRegistry.getComponentClass('AG-WATERMARK');\n    const PaginationClass = agStackComponentsRegistry.getComponentClass('AG-PAGINATION');\n    const additionalEls = [];\n    const eRootWrapper = eRootWrapperRef.current;\n    const eGridBodyParent = eGridBodyParentRef.current;\n    if (gridCtrl.showDropZones() && HeaderDropZonesClass) {\n      const headerDropZonesComp = context.createBean(new HeaderDropZonesClass());\n      const eGui = headerDropZonesComp.getGui();\n      eRootWrapper.insertAdjacentElement('afterbegin', eGui);\n      additionalEls.push(eGui);\n      beansToDestroy.push(headerDropZonesComp);\n    }\n    if (gridCtrl.showSideBar() && SideBarClass) {\n      const sideBarComp = context.createBean(new SideBarClass());\n      const eGui = sideBarComp.getGui();\n      const bottomTabGuard = eGridBodyParent.querySelector('.ag-tab-guard-bottom');\n      if (bottomTabGuard) {\n        bottomTabGuard.insertAdjacentElement('beforebegin', eGui);\n        additionalEls.push(eGui);\n      }\n      beansToDestroy.push(sideBarComp);\n    }\n    if (gridCtrl.showStatusBar() && StatusBarClass) {\n      const statusBarComp = context.createBean(new StatusBarClass());\n      const eGui = statusBarComp.getGui();\n      eRootWrapper.insertAdjacentElement('beforeend', eGui);\n      additionalEls.push(eGui);\n      beansToDestroy.push(statusBarComp);\n    }\n    if (PaginationClass) {\n      const paginationComp = context.createBean(new PaginationClass());\n      const eGui = paginationComp.getGui();\n      eRootWrapper.insertAdjacentElement('beforeend', eGui);\n      additionalEls.push(eGui);\n      beansToDestroy.push(paginationComp);\n    }\n    if (gridCtrl.showWatermark() && WatermarkClass) {\n      const watermarkComp = context.createBean(new WatermarkClass());\n      const eGui = watermarkComp.getGui();\n      eRootWrapper.insertAdjacentElement('beforeend', eGui);\n      additionalEls.push(eGui);\n      beansToDestroy.push(watermarkComp);\n    }\n    return () => {\n      context.destroyBeans(beansToDestroy);\n      additionalEls.forEach(el => {\n        if (el.parentElement) {\n          el.parentElement.removeChild(el);\n        }\n      });\n    };\n  }, [tabGuardReady]);\n  const rootWrapperClasses = useMemo(() => classesList('ag-root-wrapper', rtlClass, keyboardFocusClass, layoutClass), [rtlClass, keyboardFocusClass, layoutClass]);\n  const rootWrapperBodyClasses = useMemo(() => classesList('ag-root-wrapper-body', 'ag-focus-managed', layoutClass), [layoutClass]);\n  const topStyle = useMemo(() => ({\n    userSelect: userSelect != null ? userSelect : '',\n    WebkitUserSelect: userSelect != null ? userSelect : '',\n    cursor: cursor != null ? cursor : ''\n  }), [userSelect, cursor]);\n  const eGridBodyParent = eGridBodyParentRef.current;\n  const setTabGuardCompRef = useCallback(ref => {\n    tabGuardRef.current = ref;\n    setTabGuardReady(ref !== null);\n  }, []);\n  return React.createElement(\"div\", {\n    ref: eRootWrapperRef,\n    className: rootWrapperClasses,\n    style: topStyle,\n    role: \"presentation\"\n  }, React.createElement(\"div\", {\n    className: rootWrapperBodyClasses,\n    ref: eGridBodyParentRef,\n    role: \"presentation\"\n  }, initialised && eGridBodyParent && beans && React.createElement(BeansContext.Provider, {\n    value: beans\n  }, React.createElement(TabGuardComp, {\n    ref: setTabGuardCompRef,\n    eFocusableElement: eGridBodyParent,\n    onTabKeyDown: onTabKeyDown,\n    gridCtrl: gridCtrlRef.current\n  },\n  // we wait for initialised before rending the children, so GridComp has created and registered with it's\n  // GridCtrl before we create the child GridBodyComp. Otherwise the GridBodyComp would initialise first,\n  // before we have set the the Layout CSS classes, causing the GridBodyComp to render rows to a grid that\n  // doesn't have it's height specified, which would result if all the rows getting rendered (and if many rows,\n  // hangs the UI)\n  React.createElement(GridBodyComp, null)))));\n};\nexport default memo(GridComp);","map":{"version":3,"names":["FocusService","GridCtrl","React","memo","useCallback","useEffect","useMemo","useRef","useState","useLayoutEffect","BeansContext","GridBodyComp","useReactCommentEffect","TabGuardComp","classesList","GridComp","_ref","context","rtlClass","setRtlClass","keyboardFocusClass","setKeyboardFocusClass","layoutClass","setLayoutClass","cursor","setCursor","userSelect","setUserSelect","initialised","setInitialised","tabGuardReady","setTabGuardReady","gridCtrlRef","eRootWrapperRef","tabGuardRef","eGridBodyParentRef","focusInnerElementRef","undefined","onTabKeyDown","beans","isDestroyed","getBean","currentController","current","createBean","gridCtrl","focusInnerElement","bind","compProxy","destroyGridUi","addOrRemoveKeyboardFocusClass","addOrRemove","AG_KEYBOARD_FOCUS","forceFocusOutOfContainer","_a","updateLayoutClasses","getFocusableContainers","_b","els","gridBodyCompEl","querySelector","sideBarEl","push","setComp","destroyBean","beansToDestroy","agStackComponentsRegistry","HeaderDropZonesClass","getComponentClass","SideBarClass","StatusBarClass","WatermarkClass","PaginationClass","additionalEls","eRootWrapper","eGridBodyParent","showDropZones","headerDropZonesComp","eGui","getGui","insertAdjacentElement","showSideBar","sideBarComp","bottomTabGuard","showStatusBar","statusBarComp","paginationComp","showWatermark","watermarkComp","destroyBeans","forEach","el","parentElement","removeChild","rootWrapperClasses","rootWrapperBodyClasses","topStyle","WebkitUserSelect","setTabGuardCompRef","ref","createElement","className","style","role","Provider","value","eFocusableElement"],"sources":["/home/vvdn/React-practice/hello/node_modules/ag-grid-react/lib/reactUi/gridComp.mjs"],"sourcesContent":["// ag-grid-react v30.0.4\nimport { FocusService, GridCtrl } from 'ag-grid-community';\nimport React, { memo, useCallback, useEffect, useMemo, useRef, useState, useLayoutEffect } from 'react';\nimport { BeansContext } from './beansContext.mjs';\nimport GridBodyComp from './gridBodyComp.mjs';\nimport useReactCommentEffect from './reactComment.mjs';\nimport TabGuardComp from './tabGuardComp.mjs';\nimport { classesList } from './utils.mjs';\nconst GridComp = ({ context }) => {\n    const [rtlClass, setRtlClass] = useState('');\n    const [keyboardFocusClass, setKeyboardFocusClass] = useState('');\n    const [layoutClass, setLayoutClass] = useState('');\n    const [cursor, setCursor] = useState(null);\n    const [userSelect, setUserSelect] = useState(null);\n    const [initialised, setInitialised] = useState(false);\n    const [tabGuardReady, setTabGuardReady] = useState();\n    const gridCtrlRef = useRef(null);\n    const eRootWrapperRef = useRef(null);\n    const tabGuardRef = useRef();\n    const eGridBodyParentRef = useRef(null);\n    const focusInnerElementRef = useRef(() => undefined);\n    const onTabKeyDown = useCallback(() => undefined, []);\n    const beans = useMemo(() => {\n        if (context.isDestroyed()) {\n            return null;\n        }\n        return context.getBean('beans');\n    }, [context]);\n    useReactCommentEffect(' AG Grid ', eRootWrapperRef);\n    // create shared controller.\n    useLayoutEffect(() => {\n        if (context.isDestroyed()) {\n            return;\n        }\n        const currentController = gridCtrlRef.current = context.createBean(new GridCtrl());\n        const gridCtrl = gridCtrlRef.current;\n        focusInnerElementRef.current = gridCtrl.focusInnerElement.bind(gridCtrl);\n        const compProxy = {\n            destroyGridUi: () => { },\n            setRtlClass: setRtlClass,\n            addOrRemoveKeyboardFocusClass: (addOrRemove) => setKeyboardFocusClass(addOrRemove ? FocusService.AG_KEYBOARD_FOCUS : ''),\n            forceFocusOutOfContainer: () => {\n                var _a;\n                (_a = tabGuardRef.current) === null || _a === void 0 ? void 0 : _a.forceFocusOutOfContainer();\n            },\n            updateLayoutClasses: setLayoutClass,\n            getFocusableContainers: () => {\n                var _a, _b;\n                const els = [];\n                const gridBodyCompEl = (_a = eRootWrapperRef.current) === null || _a === void 0 ? void 0 : _a.querySelector('.ag-root');\n                const sideBarEl = (_b = eRootWrapperRef.current) === null || _b === void 0 ? void 0 : _b.querySelector('.ag-side-bar:not(.ag-hidden)');\n                if (gridBodyCompEl) {\n                    els.push(gridBodyCompEl);\n                }\n                if (sideBarEl) {\n                    els.push(sideBarEl);\n                }\n                return els;\n            },\n            setCursor,\n            setUserSelect\n        };\n        gridCtrl.setComp(compProxy, eRootWrapperRef.current, eRootWrapperRef.current);\n        setInitialised(true);\n        return () => {\n            context.destroyBean(currentController);\n            gridCtrlRef.current = null;\n        };\n    }, [context]);\n    // initialise the extra components\n    useEffect(() => {\n        if (!tabGuardReady || !beans || !gridCtrlRef.current) {\n            return;\n        }\n        const gridCtrl = gridCtrlRef.current;\n        const beansToDestroy = [];\n        const { agStackComponentsRegistry } = beans;\n        const HeaderDropZonesClass = agStackComponentsRegistry.getComponentClass('AG-GRID-HEADER-DROP-ZONES');\n        const SideBarClass = agStackComponentsRegistry.getComponentClass('AG-SIDE-BAR');\n        const StatusBarClass = agStackComponentsRegistry.getComponentClass('AG-STATUS-BAR');\n        const WatermarkClass = agStackComponentsRegistry.getComponentClass('AG-WATERMARK');\n        const PaginationClass = agStackComponentsRegistry.getComponentClass('AG-PAGINATION');\n        const additionalEls = [];\n        const eRootWrapper = eRootWrapperRef.current;\n        const eGridBodyParent = eGridBodyParentRef.current;\n        if (gridCtrl.showDropZones() && HeaderDropZonesClass) {\n            const headerDropZonesComp = context.createBean(new HeaderDropZonesClass());\n            const eGui = headerDropZonesComp.getGui();\n            eRootWrapper.insertAdjacentElement('afterbegin', eGui);\n            additionalEls.push(eGui);\n            beansToDestroy.push(headerDropZonesComp);\n        }\n        if (gridCtrl.showSideBar() && SideBarClass) {\n            const sideBarComp = context.createBean(new SideBarClass());\n            const eGui = sideBarComp.getGui();\n            const bottomTabGuard = eGridBodyParent.querySelector('.ag-tab-guard-bottom');\n            if (bottomTabGuard) {\n                bottomTabGuard.insertAdjacentElement('beforebegin', eGui);\n                additionalEls.push(eGui);\n            }\n            beansToDestroy.push(sideBarComp);\n        }\n        if (gridCtrl.showStatusBar() && StatusBarClass) {\n            const statusBarComp = context.createBean(new StatusBarClass());\n            const eGui = statusBarComp.getGui();\n            eRootWrapper.insertAdjacentElement('beforeend', eGui);\n            additionalEls.push(eGui);\n            beansToDestroy.push(statusBarComp);\n        }\n        if (PaginationClass) {\n            const paginationComp = context.createBean(new PaginationClass());\n            const eGui = paginationComp.getGui();\n            eRootWrapper.insertAdjacentElement('beforeend', eGui);\n            additionalEls.push(eGui);\n            beansToDestroy.push(paginationComp);\n        }\n        if (gridCtrl.showWatermark() && WatermarkClass) {\n            const watermarkComp = context.createBean(new WatermarkClass());\n            const eGui = watermarkComp.getGui();\n            eRootWrapper.insertAdjacentElement('beforeend', eGui);\n            additionalEls.push(eGui);\n            beansToDestroy.push(watermarkComp);\n        }\n        return () => {\n            context.destroyBeans(beansToDestroy);\n            additionalEls.forEach(el => {\n                if (el.parentElement) {\n                    el.parentElement.removeChild(el);\n                }\n            });\n        };\n    }, [tabGuardReady]);\n    const rootWrapperClasses = useMemo(() => classesList('ag-root-wrapper', rtlClass, keyboardFocusClass, layoutClass), [rtlClass, keyboardFocusClass, layoutClass]);\n    const rootWrapperBodyClasses = useMemo(() => classesList('ag-root-wrapper-body', 'ag-focus-managed', layoutClass), [layoutClass]);\n    const topStyle = useMemo(() => ({\n        userSelect: userSelect != null ? userSelect : '',\n        WebkitUserSelect: userSelect != null ? userSelect : '',\n        cursor: cursor != null ? cursor : ''\n    }), [userSelect, cursor]);\n    const eGridBodyParent = eGridBodyParentRef.current;\n    const setTabGuardCompRef = useCallback((ref) => {\n        tabGuardRef.current = ref;\n        setTabGuardReady(ref !== null);\n    }, []);\n    return (React.createElement(\"div\", { ref: eRootWrapperRef, className: rootWrapperClasses, style: topStyle, role: \"presentation\" },\n        React.createElement(\"div\", { className: rootWrapperBodyClasses, ref: eGridBodyParentRef, role: \"presentation\" }, initialised && eGridBodyParent && beans &&\n            React.createElement(BeansContext.Provider, { value: beans },\n                React.createElement(TabGuardComp, { ref: setTabGuardCompRef, eFocusableElement: eGridBodyParent, onTabKeyDown: onTabKeyDown, gridCtrl: gridCtrlRef.current }, // we wait for initialised before rending the children, so GridComp has created and registered with it's\n                // GridCtrl before we create the child GridBodyComp. Otherwise the GridBodyComp would initialise first,\n                // before we have set the the Layout CSS classes, causing the GridBodyComp to render rows to a grid that\n                // doesn't have it's height specified, which would result if all the rows getting rendered (and if many rows,\n                // hangs the UI)\n                React.createElement(GridBodyComp, null))))));\n};\nexport default memo(GridComp);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}