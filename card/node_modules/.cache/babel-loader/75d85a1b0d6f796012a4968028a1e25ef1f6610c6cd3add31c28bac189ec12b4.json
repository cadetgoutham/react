{"ast":null,"code":"// ag-grid-react v30.0.4\nimport React, { memo, useContext, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext.mjs';\nimport { HeaderRowContainerCtrl } from 'ag-grid-community';\nimport { CssClasses } from '../utils.mjs';\nimport HeaderRowComp from './headerRowComp.mjs';\nimport { useLayoutEffectOnce } from '../useEffectOnce.mjs';\nconst HeaderRowContainerComp = props => {\n  const [cssClasses, setCssClasses] = useState(new CssClasses());\n  const [ariaHidden, setAriaHidden] = useState(false);\n  const [headerRowCtrls, setHeaderRowCtrls] = useState([]);\n  const {\n    context\n  } = useContext(BeansContext);\n  const eGui = useRef(null);\n  const eCenterContainer = useRef(null);\n  const pinnedLeft = props.pinned === 'left';\n  const pinnedRight = props.pinned === 'right';\n  const centre = !pinnedLeft && !pinnedRight;\n  useLayoutEffectOnce(() => {\n    const compProxy = {\n      setDisplayed: displayed => {\n        setCssClasses(prev => prev.setClass('ag-hidden', !displayed));\n        setAriaHidden(!displayed);\n      },\n      setCtrls: ctrls => setHeaderRowCtrls(ctrls),\n      // centre only\n      setCenterWidth: width => {\n        if (eCenterContainer.current) {\n          eCenterContainer.current.style.width = width;\n        }\n      },\n      setViewportScrollLeft: left => {\n        if (eGui.current) {\n          eGui.current.scrollLeft = left;\n        }\n      },\n      // pinned only\n      setPinnedContainerWidth: width => {\n        if (eGui.current) {\n          eGui.current.style.width = width;\n          eGui.current.style.minWidth = width;\n          eGui.current.style.maxWidth = width;\n        }\n      }\n    };\n    const ctrl = context.createBean(new HeaderRowContainerCtrl(props.pinned));\n    ctrl.setComp(compProxy, eGui.current);\n    return () => {\n      context.destroyBean(ctrl);\n    };\n  });\n  const className = useMemo(() => cssClasses.toString(), [cssClasses]);\n  const insertRowsJsx = () => headerRowCtrls.map(ctrl => React.createElement(HeaderRowComp, {\n    ctrl: ctrl,\n    key: ctrl.getInstanceId()\n  }));\n  return React.createElement(React.Fragment, null, pinnedLeft && React.createElement(\"div\", {\n    ref: eGui,\n    className: \"ag-pinned-left-header \" + className,\n    \"aria-hidden\": ariaHidden,\n    role: \"presentation\"\n  }, insertRowsJsx()), pinnedRight && React.createElement(\"div\", {\n    ref: eGui,\n    className: \"ag-pinned-right-header \" + className,\n    \"aria-hidden\": ariaHidden,\n    role: \"presentation\"\n  }, insertRowsJsx()), centre && React.createElement(\"div\", {\n    ref: eGui,\n    className: \"ag-header-viewport \" + className,\n    role: \"presentation\"\n  }, React.createElement(\"div\", {\n    ref: eCenterContainer,\n    className: \"ag-header-container\",\n    role: \"rowgroup\"\n  }, insertRowsJsx())));\n};\nexport default memo(HeaderRowContainerComp);","map":{"version":3,"names":["React","memo","useContext","useMemo","useRef","useState","BeansContext","HeaderRowContainerCtrl","CssClasses","HeaderRowComp","useLayoutEffectOnce","HeaderRowContainerComp","props","cssClasses","setCssClasses","ariaHidden","setAriaHidden","headerRowCtrls","setHeaderRowCtrls","context","eGui","eCenterContainer","pinnedLeft","pinned","pinnedRight","centre","compProxy","setDisplayed","displayed","prev","setClass","setCtrls","ctrls","setCenterWidth","width","current","style","setViewportScrollLeft","left","scrollLeft","setPinnedContainerWidth","minWidth","maxWidth","ctrl","createBean","setComp","destroyBean","className","toString","insertRowsJsx","map","createElement","key","getInstanceId","Fragment","ref","role"],"sources":["/home/vvdn/React-practice/hello/node_modules/ag-grid-react/lib/reactUi/header/headerRowContainerComp.mjs"],"sourcesContent":["// ag-grid-react v30.0.4\nimport React, { memo, useContext, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext.mjs';\nimport { HeaderRowContainerCtrl } from 'ag-grid-community';\nimport { CssClasses } from '../utils.mjs';\nimport HeaderRowComp from './headerRowComp.mjs';\nimport { useLayoutEffectOnce } from '../useEffectOnce.mjs';\nconst HeaderRowContainerComp = (props) => {\n    const [cssClasses, setCssClasses] = useState(new CssClasses());\n    const [ariaHidden, setAriaHidden] = useState(false);\n    const [headerRowCtrls, setHeaderRowCtrls] = useState([]);\n    const { context } = useContext(BeansContext);\n    const eGui = useRef(null);\n    const eCenterContainer = useRef(null);\n    const pinnedLeft = props.pinned === 'left';\n    const pinnedRight = props.pinned === 'right';\n    const centre = !pinnedLeft && !pinnedRight;\n    useLayoutEffectOnce(() => {\n        const compProxy = {\n            setDisplayed: displayed => {\n                setCssClasses(prev => prev.setClass('ag-hidden', !displayed));\n                setAriaHidden(!displayed);\n            },\n            setCtrls: ctrls => setHeaderRowCtrls(ctrls),\n            // centre only\n            setCenterWidth: width => {\n                if (eCenterContainer.current) {\n                    eCenterContainer.current.style.width = width;\n                }\n            },\n            setViewportScrollLeft: left => {\n                if (eGui.current) {\n                    eGui.current.scrollLeft = left;\n                }\n            },\n            // pinned only\n            setPinnedContainerWidth: width => {\n                if (eGui.current) {\n                    eGui.current.style.width = width;\n                    eGui.current.style.minWidth = width;\n                    eGui.current.style.maxWidth = width;\n                }\n            }\n        };\n        const ctrl = context.createBean(new HeaderRowContainerCtrl(props.pinned));\n        ctrl.setComp(compProxy, eGui.current);\n        return () => {\n            context.destroyBean(ctrl);\n        };\n    });\n    const className = useMemo(() => cssClasses.toString(), [cssClasses]);\n    const insertRowsJsx = () => headerRowCtrls.map(ctrl => React.createElement(HeaderRowComp, { ctrl: ctrl, key: ctrl.getInstanceId() }));\n    return (React.createElement(React.Fragment, null,\n        pinnedLeft &&\n            React.createElement(\"div\", { ref: eGui, className: \"ag-pinned-left-header \" + className, \"aria-hidden\": ariaHidden, role: \"presentation\" }, insertRowsJsx()),\n        pinnedRight &&\n            React.createElement(\"div\", { ref: eGui, className: \"ag-pinned-right-header \" + className, \"aria-hidden\": ariaHidden, role: \"presentation\" }, insertRowsJsx()),\n        centre &&\n            React.createElement(\"div\", { ref: eGui, className: \"ag-header-viewport \" + className, role: \"presentation\" },\n                React.createElement(\"div\", { ref: eCenterContainer, className: \"ag-header-container\", role: \"rowgroup\" }, insertRowsJsx()))));\n};\nexport default memo(HeaderRowContainerComp);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}