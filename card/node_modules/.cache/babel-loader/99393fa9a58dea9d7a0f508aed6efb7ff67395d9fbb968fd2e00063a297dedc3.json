{"ast":null,"code":"// ag-grid-react v30.0.4\nimport { HeaderRowType, _ } from 'ag-grid-community';\nimport React, { memo, useCallback, useContext, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext.mjs';\nimport HeaderCellComp from './headerCellComp.mjs';\nimport HeaderGroupCellComp from './headerGroupCellComp.mjs';\nimport HeaderFilterCellComp from './headerFilterCellComp.mjs';\nimport { useLayoutEffectOnce } from '../useEffectOnce.mjs';\nconst HeaderRowComp = props => {\n  const {\n    gridOptionsService\n  } = useContext(BeansContext);\n  const [transform, setTransform] = useState();\n  const [height, setHeight] = useState();\n  const [top, setTop] = useState();\n  const [ariaRowIndex, setAriaRowIndex] = useState();\n  const [cellCtrls, setCellCtrls] = useState([]);\n  const eGui = useRef(null);\n  const {\n    ctrl\n  } = props;\n  const typeColumn = ctrl.getType() === HeaderRowType.COLUMN;\n  const typeGroup = ctrl.getType() === HeaderRowType.COLUMN_GROUP;\n  const typeFilter = ctrl.getType() === HeaderRowType.FLOATING_FILTER;\n  const setCellCtrlsMaintainOrder = useCallback((prev, next) => {\n    const isEnsureDomOrder = gridOptionsService.is('ensureDomOrder');\n    const isPrintLayout = gridOptionsService.isDomLayout('print');\n    // if we are ensuring dom order, we set the ctrls into the dom in the same order they appear on screen\n    if (isEnsureDomOrder || isPrintLayout) {\n      return next;\n    }\n    // if not maintaining order, we want to keep the dom elements we have and add new ones to the end,\n    // otherwise we will loose transition effects as elements are placed in different dom locations\n    const prevMap = _.mapById(prev, c => c.getInstanceId());\n    const nextMap = _.mapById(next, c => c.getInstanceId());\n    const oldCtrlsWeAreKeeping = prev.filter(c => nextMap.has(c.getInstanceId()));\n    const newCtrls = next.filter(c => !prevMap.has(c.getInstanceId()));\n    return [...oldCtrlsWeAreKeeping, ...newCtrls];\n  }, []);\n  useLayoutEffectOnce(() => {\n    const compProxy = {\n      setTransform: transform => setTransform(transform),\n      setHeight: height => setHeight(height),\n      setTop: top => setTop(top),\n      setHeaderCtrls: ctrls => setCellCtrls(prev => setCellCtrlsMaintainOrder(prev, ctrls)),\n      setWidth: width => {\n        if (eGui.current) {\n          eGui.current.style.width = width;\n        }\n      },\n      setAriaRowIndex: rowIndex => setAriaRowIndex(rowIndex)\n    };\n    ctrl.setComp(compProxy);\n  });\n  const style = useMemo(() => ({\n    transform: transform,\n    height: height,\n    top: top\n  }), [transform, height, top]);\n  const className = useMemo(() => {\n    const res = [`ag-header-row`];\n    typeColumn && res.push(`ag-header-row-column`);\n    typeGroup && res.push(`ag-header-row-column-group`);\n    typeFilter && res.push(`ag-header-row-column-filter`);\n    return res.join(' ');\n  }, []);\n  const createCellJsx = useCallback(cellCtrl => {\n    switch (ctrl.getType()) {\n      case HeaderRowType.COLUMN_GROUP:\n        return React.createElement(HeaderGroupCellComp, {\n          ctrl: cellCtrl,\n          key: cellCtrl.getInstanceId()\n        });\n      case HeaderRowType.FLOATING_FILTER:\n        return React.createElement(HeaderFilterCellComp, {\n          ctrl: cellCtrl,\n          key: cellCtrl.getInstanceId()\n        });\n      default:\n        return React.createElement(HeaderCellComp, {\n          ctrl: cellCtrl,\n          key: cellCtrl.getInstanceId()\n        });\n    }\n  }, []);\n  return React.createElement(\"div\", {\n    ref: eGui,\n    className: className,\n    role: \"row\",\n    style: style,\n    \"aria-rowindex\": ariaRowIndex\n  }, cellCtrls.map(createCellJsx));\n};\nexport default memo(HeaderRowComp);","map":{"version":3,"names":["HeaderRowType","_","React","memo","useCallback","useContext","useMemo","useRef","useState","BeansContext","HeaderCellComp","HeaderGroupCellComp","HeaderFilterCellComp","useLayoutEffectOnce","HeaderRowComp","props","gridOptionsService","transform","setTransform","height","setHeight","top","setTop","ariaRowIndex","setAriaRowIndex","cellCtrls","setCellCtrls","eGui","ctrl","typeColumn","getType","COLUMN","typeGroup","COLUMN_GROUP","typeFilter","FLOATING_FILTER","setCellCtrlsMaintainOrder","prev","next","isEnsureDomOrder","is","isPrintLayout","isDomLayout","prevMap","mapById","c","getInstanceId","nextMap","oldCtrlsWeAreKeeping","filter","has","newCtrls","compProxy","setHeaderCtrls","ctrls","setWidth","width","current","style","rowIndex","setComp","className","res","push","join","createCellJsx","cellCtrl","createElement","key","ref","role","map"],"sources":["/home/vvdn/React-practice/hello/node_modules/ag-grid-react/lib/reactUi/header/headerRowComp.mjs"],"sourcesContent":["// ag-grid-react v30.0.4\nimport { HeaderRowType, _ } from 'ag-grid-community';\nimport React, { memo, useCallback, useContext, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext.mjs';\nimport HeaderCellComp from './headerCellComp.mjs';\nimport HeaderGroupCellComp from './headerGroupCellComp.mjs';\nimport HeaderFilterCellComp from './headerFilterCellComp.mjs';\nimport { useLayoutEffectOnce } from '../useEffectOnce.mjs';\nconst HeaderRowComp = (props) => {\n    const { gridOptionsService } = useContext(BeansContext);\n    const [transform, setTransform] = useState();\n    const [height, setHeight] = useState();\n    const [top, setTop] = useState();\n    const [ariaRowIndex, setAriaRowIndex] = useState();\n    const [cellCtrls, setCellCtrls] = useState([]);\n    const eGui = useRef(null);\n    const { ctrl } = props;\n    const typeColumn = ctrl.getType() === HeaderRowType.COLUMN;\n    const typeGroup = ctrl.getType() === HeaderRowType.COLUMN_GROUP;\n    const typeFilter = ctrl.getType() === HeaderRowType.FLOATING_FILTER;\n    const setCellCtrlsMaintainOrder = useCallback((prev, next) => {\n        const isEnsureDomOrder = gridOptionsService.is('ensureDomOrder');\n        const isPrintLayout = gridOptionsService.isDomLayout('print');\n        // if we are ensuring dom order, we set the ctrls into the dom in the same order they appear on screen\n        if (isEnsureDomOrder || isPrintLayout) {\n            return next;\n        }\n        // if not maintaining order, we want to keep the dom elements we have and add new ones to the end,\n        // otherwise we will loose transition effects as elements are placed in different dom locations\n        const prevMap = _.mapById(prev, c => c.getInstanceId());\n        const nextMap = _.mapById(next, c => c.getInstanceId());\n        const oldCtrlsWeAreKeeping = prev.filter(c => nextMap.has(c.getInstanceId()));\n        const newCtrls = next.filter(c => !prevMap.has(c.getInstanceId()));\n        return [...oldCtrlsWeAreKeeping, ...newCtrls];\n    }, []);\n    useLayoutEffectOnce(() => {\n        const compProxy = {\n            setTransform: transform => setTransform(transform),\n            setHeight: height => setHeight(height),\n            setTop: top => setTop(top),\n            setHeaderCtrls: ctrls => setCellCtrls(prev => setCellCtrlsMaintainOrder(prev, ctrls)),\n            setWidth: width => {\n                if (eGui.current) {\n                    eGui.current.style.width = width;\n                }\n            },\n            setAriaRowIndex: rowIndex => setAriaRowIndex(rowIndex)\n        };\n        ctrl.setComp(compProxy);\n    });\n    const style = useMemo(() => ({\n        transform: transform,\n        height: height,\n        top: top,\n    }), [transform, height, top]);\n    const className = useMemo(() => {\n        const res = [`ag-header-row`];\n        typeColumn && res.push(`ag-header-row-column`);\n        typeGroup && res.push(`ag-header-row-column-group`);\n        typeFilter && res.push(`ag-header-row-column-filter`);\n        return res.join(' ');\n    }, []);\n    const createCellJsx = useCallback((cellCtrl) => {\n        switch (ctrl.getType()) {\n            case HeaderRowType.COLUMN_GROUP:\n                return React.createElement(HeaderGroupCellComp, { ctrl: cellCtrl, key: cellCtrl.getInstanceId() });\n            case HeaderRowType.FLOATING_FILTER:\n                return React.createElement(HeaderFilterCellComp, { ctrl: cellCtrl, key: cellCtrl.getInstanceId() });\n            default:\n                return React.createElement(HeaderCellComp, { ctrl: cellCtrl, key: cellCtrl.getInstanceId() });\n        }\n    }, []);\n    return (React.createElement(\"div\", { ref: eGui, className: className, role: \"row\", style: style, \"aria-rowindex\": ariaRowIndex }, cellCtrls.map(createCellJsx)));\n};\nexport default memo(HeaderRowComp);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}