{"ast":null,"code":"// ag-grid-react v30.0.4\nimport { createElement } from 'react';\nimport { createPortal } from 'react-dom';\nimport { AgPromise } from 'ag-grid-community';\nimport { ReactComponent } from './reactComponent.mjs';\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport generateNewKey from \"./keyGenerator.mjs\";\nexport class NewReactComponent extends ReactComponent {\n  constructor(reactComponent, parentComponent, componentType) {\n    super(reactComponent, parentComponent, componentType);\n    this.oldPortal = null;\n    this.key = generateNewKey();\n    this.portalKey = generateNewKey();\n  }\n  init(params) {\n    this.eParentElement = this.createParentElement(params);\n    this.params = params;\n    this.createOrUpdatePortal(params);\n    return new AgPromise(resolve => this.createReactComponent(resolve));\n  }\n  createOrUpdatePortal(params) {\n    if (!this.isStatelessComponent()) {\n      // grab hold of the actual instance created\n      params.ref = element => {\n        this.componentInstance = element;\n        this.addParentContainerStyleAndClasses();\n      };\n    }\n    this.reactElement = createElement(this.reactComponent, Object.assign(Object.assign({}, params), {\n      key: this.key\n    }));\n    this.portal = createPortal(this.reactElement, this.eParentElement, this.portalKey // fixed deltaRowModeRefreshCompRenderer\n    );\n  }\n\n  createReactComponent(resolve) {\n    this.portalManager.mountReactPortal(this.portal, this, value => {\n      resolve(value);\n    });\n  }\n  isNullValue() {\n    return this.valueRenderedIsNull(this.params);\n  }\n  rendered() {\n    return this.isStatelessComponent() && this.statelessComponentRendered() || !!(!this.isStatelessComponent() && this.getFrameworkComponentInstance());\n  }\n  valueRenderedIsNull(params) {\n    // we only do this for cellRenderers\n    if (!this.componentType.cellRenderer) {\n      return false;\n    }\n    // we've no way of knowing if a component returns null without rendering it first\n    // so we render it to markup and check the output - if it'll be null we know and won't timeout\n    // waiting for a component that will never be created\n    const originalConsoleError = console.error;\n    try {\n      // if a user is doing anything that uses useLayoutEffect (like material ui) then it will throw and we\n      // can't do anything to stop it; this is just a warning and has no effect on anything so just suppress it\n      // for this single operation\n      console.error = () => {};\n      const staticMarkup = renderToStaticMarkup(createElement(this.reactComponent, params));\n      return staticMarkup === '';\n    } catch (ignore) {} finally {\n      console.error = originalConsoleError;\n    }\n    return false;\n  }\n  /*\n  * fallback methods - these will be invoked if a corresponding instance method is not present\n  * for example if refresh is called and is not available on the component instance, then refreshComponent on this\n  * class will be invoked instead\n  *\n  * Currently only refresh is supported\n  */\n  refreshComponent(args) {\n    this.oldPortal = this.portal;\n    this.createOrUpdatePortal(args);\n    this.portalManager.updateReactPortal(this.oldPortal, this.portal);\n  }\n  fallbackMethod(name, params) {\n    const method = this[`${name}Component`];\n    if (!!method) {\n      return method.bind(this)(params);\n    }\n  }\n  fallbackMethodAvailable(name) {\n    const method = this[`${name}Component`];\n    return !!method;\n  }\n}","map":{"version":3,"names":["createElement","createPortal","AgPromise","ReactComponent","renderToStaticMarkup","generateNewKey","NewReactComponent","constructor","reactComponent","parentComponent","componentType","oldPortal","key","portalKey","init","params","eParentElement","createParentElement","createOrUpdatePortal","resolve","createReactComponent","isStatelessComponent","ref","element","componentInstance","addParentContainerStyleAndClasses","reactElement","Object","assign","portal","portalManager","mountReactPortal","value","isNullValue","valueRenderedIsNull","rendered","statelessComponentRendered","getFrameworkComponentInstance","cellRenderer","originalConsoleError","console","error","staticMarkup","ignore","refreshComponent","args","updateReactPortal","fallbackMethod","name","method","bind","fallbackMethodAvailable"],"sources":["/home/vvdn/React-practice/hello/node_modules/ag-grid-react/lib/shared/newReactComponent.mjs"],"sourcesContent":["// ag-grid-react v30.0.4\nimport { createElement } from 'react';\nimport { createPortal } from 'react-dom';\nimport { AgPromise } from 'ag-grid-community';\nimport { ReactComponent } from './reactComponent.mjs';\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport generateNewKey from \"./keyGenerator.mjs\";\nexport class NewReactComponent extends ReactComponent {\n    constructor(reactComponent, parentComponent, componentType) {\n        super(reactComponent, parentComponent, componentType);\n        this.oldPortal = null;\n        this.key = generateNewKey();\n        this.portalKey = generateNewKey();\n    }\n    init(params) {\n        this.eParentElement = this.createParentElement(params);\n        this.params = params;\n        this.createOrUpdatePortal(params);\n        return new AgPromise(resolve => this.createReactComponent(resolve));\n    }\n    createOrUpdatePortal(params) {\n        if (!this.isStatelessComponent()) {\n            // grab hold of the actual instance created\n            params.ref = (element) => {\n                this.componentInstance = element;\n                this.addParentContainerStyleAndClasses();\n            };\n        }\n        this.reactElement = createElement(this.reactComponent, Object.assign(Object.assign({}, params), { key: this.key }));\n        this.portal = createPortal(this.reactElement, this.eParentElement, this.portalKey // fixed deltaRowModeRefreshCompRenderer\n        );\n    }\n    createReactComponent(resolve) {\n        this.portalManager.mountReactPortal(this.portal, this, (value) => {\n            resolve(value);\n        });\n    }\n    isNullValue() {\n        return this.valueRenderedIsNull(this.params);\n    }\n    rendered() {\n        return (this.isStatelessComponent() && this.statelessComponentRendered()) ||\n            !!(!this.isStatelessComponent() && this.getFrameworkComponentInstance());\n    }\n    valueRenderedIsNull(params) {\n        // we only do this for cellRenderers\n        if (!this.componentType.cellRenderer) {\n            return false;\n        }\n        // we've no way of knowing if a component returns null without rendering it first\n        // so we render it to markup and check the output - if it'll be null we know and won't timeout\n        // waiting for a component that will never be created\n        const originalConsoleError = console.error;\n        try {\n            // if a user is doing anything that uses useLayoutEffect (like material ui) then it will throw and we\n            // can't do anything to stop it; this is just a warning and has no effect on anything so just suppress it\n            // for this single operation\n            console.error = () => {\n            };\n            const staticMarkup = renderToStaticMarkup(createElement(this.reactComponent, params));\n            return staticMarkup === '';\n        }\n        catch (ignore) {\n        }\n        finally {\n            console.error = originalConsoleError;\n        }\n        return false;\n    }\n    /*\n    * fallback methods - these will be invoked if a corresponding instance method is not present\n    * for example if refresh is called and is not available on the component instance, then refreshComponent on this\n    * class will be invoked instead\n    *\n    * Currently only refresh is supported\n    */\n    refreshComponent(args) {\n        this.oldPortal = this.portal;\n        this.createOrUpdatePortal(args);\n        this.portalManager.updateReactPortal(this.oldPortal, this.portal);\n    }\n    fallbackMethod(name, params) {\n        const method = this[`${name}Component`];\n        if (!!method) {\n            return method.bind(this)(params);\n        }\n    }\n    fallbackMethodAvailable(name) {\n        const method = this[`${name}Component`];\n        return !!method;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}