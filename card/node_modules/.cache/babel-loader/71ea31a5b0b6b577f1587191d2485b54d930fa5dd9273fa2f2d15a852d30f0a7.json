{"ast":null,"code":"// ag-grid-react v30.0.4\nimport { BaseComponentWrapper, ComponentUtil, Grid, _ } from 'ag-grid-community';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { LegacyReactComponent } from './legacyReactComponent.mjs';\nimport { NewReactComponent } from '../shared/newReactComponent.mjs';\nimport { LegacyPortalManager } from '../shared/portalManager.mjs';\nimport { ReactFrameworkOverrides } from '../shared/reactFrameworkOverrides.mjs';\nexport class AgGridReactLegacy extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.api = null;\n    this.destroyed = false;\n    this.SYNCHRONOUS_CHANGE_PROPERTIES = ['context'];\n    this.portalManager = new LegacyPortalManager(this, props.componentWrappingElement, props.maxComponentCreationTimeMs);\n  }\n  render() {\n    return React.createElement('div', {\n      style: this.createStyleForDiv(),\n      className: this.props.className,\n      ref: e => {\n        this.eGridDiv = e;\n      }\n    }, this.portalManager.getPortals());\n  }\n  createStyleForDiv() {\n    return Object.assign({\n      height: '100%'\n    }, this.props.containerStyle || {});\n  }\n  componentDidMount() {\n    const modules = this.props.modules || [];\n    const gridParams = {\n      providedBeanInstances: {\n        agGridReact: this,\n        frameworkComponentWrapper: new ReactFrameworkComponentWrapper(this, this.portalManager)\n      },\n      modules,\n      frameworkOverrides: new ReactFrameworkOverrides(false)\n    };\n    const gridOptions = this.props.gridOptions || {};\n    this.gridOptions = ComponentUtil.copyAttributesToGridOptions(gridOptions, this.props);\n    this.checkForDeprecations(this.props);\n    // don't need the return value\n    new Grid(this.eGridDiv, this.gridOptions, gridParams);\n    this.api = this.gridOptions.api;\n    this.columnApi = this.gridOptions.columnApi;\n    this.props.setGridApi(this.api, this.columnApi);\n  }\n  checkForDeprecations(props) {\n    if (props.rowDataChangeDetectionStrategy) {\n      _.doOnce(() => console.warn('AG Grid: Since v29 rowDataChangeDetectionStrategy has been deprecated. Row data property changes will be compared by reference via triple equals ===. See https://ag-grid.com/react-data-grid/react-hooks/'), 'rowDataChangeDetectionStrategy_Deprecation');\n    }\n  }\n  shouldComponentUpdate(nextProps) {\n    this.processPropsChanges(this.props, nextProps);\n    // we want full control of the dom, as AG Grid doesn't use React internally,\n    // so for performance reasons we tell React we don't need render called after\n    // property changes.\n    return false;\n  }\n  componentDidUpdate(prevProps) {\n    this.processPropsChanges(prevProps, this.props);\n  }\n  processPropsChanges(prevProps, nextProps) {\n    const changes = {};\n    this.extractGridPropertyChanges(prevProps, nextProps, changes);\n    this.processSynchronousChanges(changes);\n    this.processAsynchronousChanges(changes);\n  }\n  extractGridPropertyChanges(prevProps, nextProps, changes) {\n    const debugLogging = !!nextProps.debug;\n    Object.keys(nextProps).forEach(propKey => {\n      if (ComponentUtil.ALL_PROPERTIES_SET.has(propKey)) {\n        if (prevProps[propKey] !== nextProps[propKey]) {\n          if (debugLogging) {\n            console.log(`agGridReact: [${propKey}] property changed`);\n          }\n          changes[propKey] = {\n            previousValue: prevProps[propKey],\n            currentValue: nextProps[propKey]\n          };\n        }\n      }\n    });\n    ComponentUtil.EVENT_CALLBACKS.forEach(funcName => {\n      if (prevProps[funcName] !== nextProps[funcName]) {\n        if (debugLogging) {\n          console.log(`agGridReact: [${funcName}] event callback changed`);\n        }\n        changes[funcName] = {\n          previousValue: prevProps[funcName],\n          currentValue: nextProps[funcName]\n        };\n      }\n    });\n  }\n  componentWillUnmount() {\n    if (this.api) {\n      this.api.destroy();\n      this.api = null;\n    }\n    this.destroyed = true;\n    this.portalManager.destroy();\n  }\n  isDisableStaticMarkup() {\n    return this.props.disableStaticMarkup === true;\n  }\n  isLegacyComponentRendering() {\n    return this.props.legacyComponentRendering === true;\n  }\n  processSynchronousChanges(changes) {\n    const asyncChanges = Object.assign({}, changes);\n    if (Object.keys(asyncChanges).length > 0) {\n      const synchronousChanges = {};\n      this.SYNCHRONOUS_CHANGE_PROPERTIES.forEach(synchronousChangeProperty => {\n        if (asyncChanges[synchronousChangeProperty]) {\n          synchronousChanges[synchronousChangeProperty] = asyncChanges[synchronousChangeProperty];\n          delete asyncChanges[synchronousChangeProperty];\n        }\n      });\n      if (Object.keys(synchronousChanges).length > 0 && !!this.api) {\n        ComponentUtil.processOnChange(synchronousChanges, this.api);\n      }\n    }\n    return asyncChanges;\n  }\n  processAsynchronousChanges(changes) {\n    if (Object.keys(changes).length > 0) {\n      window.setTimeout(() => {\n        // destroyed?\n        if (this.api) {\n          ComponentUtil.processOnChange(changes, this.api);\n        }\n      });\n    }\n  }\n}\nAgGridReactLegacy.MAX_COMPONENT_CREATION_TIME_IN_MS = 1000; // a second should be more than enough to instantiate a component\nAgGridReactLegacy.defaultProps = {\n  legacyComponentRendering: false,\n  disableStaticMarkup: false,\n  maxComponentCreationTimeMs: AgGridReactLegacy.MAX_COMPONENT_CREATION_TIME_IN_MS\n};\nAgGridReactLegacy.propTypes = {\n  gridOptions: PropTypes.object\n};\naddProperties(ComponentUtil.EVENT_CALLBACKS, PropTypes.func);\naddProperties(ComponentUtil.BOOLEAN_PROPERTIES, PropTypes.bool);\naddProperties(ComponentUtil.STRING_PROPERTIES, PropTypes.string);\naddProperties(ComponentUtil.OBJECT_PROPERTIES, PropTypes.object);\naddProperties(ComponentUtil.ARRAY_PROPERTIES, PropTypes.array);\naddProperties(ComponentUtil.NUMBER_PROPERTIES, PropTypes.number);\naddProperties(ComponentUtil.FUNCTION_PROPERTIES, PropTypes.func);\nfunction addProperties(listOfProps, propType) {\n  listOfProps.forEach(propKey => {\n    AgGridReactLegacy[propKey] = propType;\n  });\n}\nclass ReactFrameworkComponentWrapper extends BaseComponentWrapper {\n  constructor(agGridReact, portalManager) {\n    super();\n    this.agGridReact = agGridReact;\n    this.portalManager = portalManager;\n  }\n  createWrapper(UserReactComponent, componentType) {\n    if (this.agGridReact.isLegacyComponentRendering()) {\n      return new LegacyReactComponent(UserReactComponent, this.agGridReact, this.portalManager, componentType);\n    } else {\n      return new NewReactComponent(UserReactComponent, this.portalManager, componentType);\n    }\n  }\n}","map":{"version":3,"names":["BaseComponentWrapper","ComponentUtil","Grid","_","PropTypes","React","Component","LegacyReactComponent","NewReactComponent","LegacyPortalManager","ReactFrameworkOverrides","AgGridReactLegacy","constructor","props","api","destroyed","SYNCHRONOUS_CHANGE_PROPERTIES","portalManager","componentWrappingElement","maxComponentCreationTimeMs","render","createElement","style","createStyleForDiv","className","ref","e","eGridDiv","getPortals","Object","assign","height","containerStyle","componentDidMount","modules","gridParams","providedBeanInstances","agGridReact","frameworkComponentWrapper","ReactFrameworkComponentWrapper","frameworkOverrides","gridOptions","copyAttributesToGridOptions","checkForDeprecations","columnApi","setGridApi","rowDataChangeDetectionStrategy","doOnce","console","warn","shouldComponentUpdate","nextProps","processPropsChanges","componentDidUpdate","prevProps","changes","extractGridPropertyChanges","processSynchronousChanges","processAsynchronousChanges","debugLogging","debug","keys","forEach","propKey","ALL_PROPERTIES_SET","has","log","previousValue","currentValue","EVENT_CALLBACKS","funcName","componentWillUnmount","destroy","isDisableStaticMarkup","disableStaticMarkup","isLegacyComponentRendering","legacyComponentRendering","asyncChanges","length","synchronousChanges","synchronousChangeProperty","processOnChange","window","setTimeout","MAX_COMPONENT_CREATION_TIME_IN_MS","defaultProps","propTypes","object","addProperties","func","BOOLEAN_PROPERTIES","bool","STRING_PROPERTIES","string","OBJECT_PROPERTIES","ARRAY_PROPERTIES","array","NUMBER_PROPERTIES","number","FUNCTION_PROPERTIES","listOfProps","propType","createWrapper","UserReactComponent","componentType"],"sources":["/home/vvdn/React-practice/hello/node_modules/ag-grid-react/lib/legacy/agGridReactLegacy.mjs"],"sourcesContent":["// ag-grid-react v30.0.4\nimport { BaseComponentWrapper, ComponentUtil, Grid, _ } from 'ag-grid-community';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { LegacyReactComponent } from './legacyReactComponent.mjs';\nimport { NewReactComponent } from '../shared/newReactComponent.mjs';\nimport { LegacyPortalManager } from '../shared/portalManager.mjs';\nimport { ReactFrameworkOverrides } from '../shared/reactFrameworkOverrides.mjs';\nexport class AgGridReactLegacy extends Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n        this.api = null;\n        this.destroyed = false;\n        this.SYNCHRONOUS_CHANGE_PROPERTIES = ['context'];\n        this.portalManager = new LegacyPortalManager(this, props.componentWrappingElement, props.maxComponentCreationTimeMs);\n    }\n    render() {\n        return React.createElement('div', {\n            style: this.createStyleForDiv(),\n            className: this.props.className,\n            ref: (e) => {\n                this.eGridDiv = e;\n            }\n        }, this.portalManager.getPortals());\n    }\n    createStyleForDiv() {\n        return Object.assign({ height: '100%' }, (this.props.containerStyle || {}));\n    }\n    componentDidMount() {\n        const modules = this.props.modules || [];\n        const gridParams = {\n            providedBeanInstances: {\n                agGridReact: this,\n                frameworkComponentWrapper: new ReactFrameworkComponentWrapper(this, this.portalManager)\n            },\n            modules,\n            frameworkOverrides: new ReactFrameworkOverrides(false)\n        };\n        const gridOptions = this.props.gridOptions || {};\n        this.gridOptions = ComponentUtil.copyAttributesToGridOptions(gridOptions, this.props);\n        this.checkForDeprecations(this.props);\n        // don't need the return value\n        new Grid(this.eGridDiv, this.gridOptions, gridParams);\n        this.api = this.gridOptions.api;\n        this.columnApi = this.gridOptions.columnApi;\n        this.props.setGridApi(this.api, this.columnApi);\n    }\n    checkForDeprecations(props) {\n        if (props.rowDataChangeDetectionStrategy) {\n            _.doOnce(() => console.warn('AG Grid: Since v29 rowDataChangeDetectionStrategy has been deprecated. Row data property changes will be compared by reference via triple equals ===. See https://ag-grid.com/react-data-grid/react-hooks/'), 'rowDataChangeDetectionStrategy_Deprecation');\n        }\n    }\n    shouldComponentUpdate(nextProps) {\n        this.processPropsChanges(this.props, nextProps);\n        // we want full control of the dom, as AG Grid doesn't use React internally,\n        // so for performance reasons we tell React we don't need render called after\n        // property changes.\n        return false;\n    }\n    componentDidUpdate(prevProps) {\n        this.processPropsChanges(prevProps, this.props);\n    }\n    processPropsChanges(prevProps, nextProps) {\n        const changes = {};\n        this.extractGridPropertyChanges(prevProps, nextProps, changes);\n        this.processSynchronousChanges(changes);\n        this.processAsynchronousChanges(changes);\n    }\n    extractGridPropertyChanges(prevProps, nextProps, changes) {\n        const debugLogging = !!nextProps.debug;\n        Object.keys(nextProps).forEach(propKey => {\n            if (ComponentUtil.ALL_PROPERTIES_SET.has(propKey)) {\n                if (prevProps[propKey] !== nextProps[propKey]) {\n                    if (debugLogging) {\n                        console.log(`agGridReact: [${propKey}] property changed`);\n                    }\n                    changes[propKey] = {\n                        previousValue: prevProps[propKey],\n                        currentValue: nextProps[propKey]\n                    };\n                }\n            }\n        });\n        ComponentUtil.EVENT_CALLBACKS.forEach(funcName => {\n            if (prevProps[funcName] !== nextProps[funcName]) {\n                if (debugLogging) {\n                    console.log(`agGridReact: [${funcName}] event callback changed`);\n                }\n                changes[funcName] = {\n                    previousValue: prevProps[funcName],\n                    currentValue: nextProps[funcName]\n                };\n            }\n        });\n    }\n    componentWillUnmount() {\n        if (this.api) {\n            this.api.destroy();\n            this.api = null;\n        }\n        this.destroyed = true;\n        this.portalManager.destroy();\n    }\n    isDisableStaticMarkup() {\n        return this.props.disableStaticMarkup === true;\n    }\n    isLegacyComponentRendering() {\n        return this.props.legacyComponentRendering === true;\n    }\n    processSynchronousChanges(changes) {\n        const asyncChanges = Object.assign({}, changes);\n        if (Object.keys(asyncChanges).length > 0) {\n            const synchronousChanges = {};\n            this.SYNCHRONOUS_CHANGE_PROPERTIES.forEach((synchronousChangeProperty) => {\n                if (asyncChanges[synchronousChangeProperty]) {\n                    synchronousChanges[synchronousChangeProperty] = asyncChanges[synchronousChangeProperty];\n                    delete asyncChanges[synchronousChangeProperty];\n                }\n            });\n            if (Object.keys(synchronousChanges).length > 0 && !!this.api) {\n                ComponentUtil.processOnChange(synchronousChanges, this.api);\n            }\n        }\n        return asyncChanges;\n    }\n    processAsynchronousChanges(changes) {\n        if (Object.keys(changes).length > 0) {\n            window.setTimeout(() => {\n                // destroyed?\n                if (this.api) {\n                    ComponentUtil.processOnChange(changes, this.api);\n                }\n            });\n        }\n    }\n}\nAgGridReactLegacy.MAX_COMPONENT_CREATION_TIME_IN_MS = 1000; // a second should be more than enough to instantiate a component\nAgGridReactLegacy.defaultProps = {\n    legacyComponentRendering: false,\n    disableStaticMarkup: false,\n    maxComponentCreationTimeMs: AgGridReactLegacy.MAX_COMPONENT_CREATION_TIME_IN_MS\n};\nAgGridReactLegacy.propTypes = {\n    gridOptions: PropTypes.object\n};\naddProperties(ComponentUtil.EVENT_CALLBACKS, PropTypes.func);\naddProperties(ComponentUtil.BOOLEAN_PROPERTIES, PropTypes.bool);\naddProperties(ComponentUtil.STRING_PROPERTIES, PropTypes.string);\naddProperties(ComponentUtil.OBJECT_PROPERTIES, PropTypes.object);\naddProperties(ComponentUtil.ARRAY_PROPERTIES, PropTypes.array);\naddProperties(ComponentUtil.NUMBER_PROPERTIES, PropTypes.number);\naddProperties(ComponentUtil.FUNCTION_PROPERTIES, PropTypes.func);\nfunction addProperties(listOfProps, propType) {\n    listOfProps.forEach(propKey => {\n        AgGridReactLegacy[propKey] = propType;\n    });\n}\nclass ReactFrameworkComponentWrapper extends BaseComponentWrapper {\n    constructor(agGridReact, portalManager) {\n        super();\n        this.agGridReact = agGridReact;\n        this.portalManager = portalManager;\n    }\n    createWrapper(UserReactComponent, componentType) {\n        if (this.agGridReact.isLegacyComponentRendering()) {\n            return new LegacyReactComponent(UserReactComponent, this.agGridReact, this.portalManager, componentType);\n        }\n        else {\n            return new NewReactComponent(UserReactComponent, this.portalManager, componentType);\n        }\n    }\n}\n"],"mappings":"AAAA;AACA,SAASA,oBAAoB,EAAEC,aAAa,EAAEC,IAAI,EAAEC,CAAC,QAAQ,mBAAmB;AAChF,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,oBAAoB,QAAQ,4BAA4B;AACjE,SAASC,iBAAiB,QAAQ,iCAAiC;AACnE,SAASC,mBAAmB,QAAQ,6BAA6B;AACjE,SAASC,uBAAuB,QAAQ,uCAAuC;AAC/E,OAAO,MAAMC,iBAAiB,SAASL,SAAS,CAAC;EAC7CM,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,GAAG,GAAG,IAAI;IACf,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,6BAA6B,GAAG,CAAC,SAAS,CAAC;IAChD,IAAI,CAACC,aAAa,GAAG,IAAIR,mBAAmB,CAAC,IAAI,EAAEI,KAAK,CAACK,wBAAwB,EAAEL,KAAK,CAACM,0BAA0B,CAAC;EACxH;EACAC,MAAMA,CAAA,EAAG;IACL,OAAOf,KAAK,CAACgB,aAAa,CAAC,KAAK,EAAE;MAC9BC,KAAK,EAAE,IAAI,CAACC,iBAAiB,CAAC,CAAC;MAC/BC,SAAS,EAAE,IAAI,CAACX,KAAK,CAACW,SAAS;MAC/BC,GAAG,EAAGC,CAAC,IAAK;QACR,IAAI,CAACC,QAAQ,GAAGD,CAAC;MACrB;IACJ,CAAC,EAAE,IAAI,CAACT,aAAa,CAACW,UAAU,CAAC,CAAC,CAAC;EACvC;EACAL,iBAAiBA,CAAA,EAAG;IAChB,OAAOM,MAAM,CAACC,MAAM,CAAC;MAAEC,MAAM,EAAE;IAAO,CAAC,EAAG,IAAI,CAAClB,KAAK,CAACmB,cAAc,IAAI,CAAC,CAAE,CAAC;EAC/E;EACAC,iBAAiBA,CAAA,EAAG;IAChB,MAAMC,OAAO,GAAG,IAAI,CAACrB,KAAK,CAACqB,OAAO,IAAI,EAAE;IACxC,MAAMC,UAAU,GAAG;MACfC,qBAAqB,EAAE;QACnBC,WAAW,EAAE,IAAI;QACjBC,yBAAyB,EAAE,IAAIC,8BAA8B,CAAC,IAAI,EAAE,IAAI,CAACtB,aAAa;MAC1F,CAAC;MACDiB,OAAO;MACPM,kBAAkB,EAAE,IAAI9B,uBAAuB,CAAC,KAAK;IACzD,CAAC;IACD,MAAM+B,WAAW,GAAG,IAAI,CAAC5B,KAAK,CAAC4B,WAAW,IAAI,CAAC,CAAC;IAChD,IAAI,CAACA,WAAW,GAAGxC,aAAa,CAACyC,2BAA2B,CAACD,WAAW,EAAE,IAAI,CAAC5B,KAAK,CAAC;IACrF,IAAI,CAAC8B,oBAAoB,CAAC,IAAI,CAAC9B,KAAK,CAAC;IACrC;IACA,IAAIX,IAAI,CAAC,IAAI,CAACyB,QAAQ,EAAE,IAAI,CAACc,WAAW,EAAEN,UAAU,CAAC;IACrD,IAAI,CAACrB,GAAG,GAAG,IAAI,CAAC2B,WAAW,CAAC3B,GAAG;IAC/B,IAAI,CAAC8B,SAAS,GAAG,IAAI,CAACH,WAAW,CAACG,SAAS;IAC3C,IAAI,CAAC/B,KAAK,CAACgC,UAAU,CAAC,IAAI,CAAC/B,GAAG,EAAE,IAAI,CAAC8B,SAAS,CAAC;EACnD;EACAD,oBAAoBA,CAAC9B,KAAK,EAAE;IACxB,IAAIA,KAAK,CAACiC,8BAA8B,EAAE;MACtC3C,CAAC,CAAC4C,MAAM,CAAC,MAAMC,OAAO,CAACC,IAAI,CAAC,4MAA4M,CAAC,EAAE,4CAA4C,CAAC;IAC5R;EACJ;EACAC,qBAAqBA,CAACC,SAAS,EAAE;IAC7B,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACvC,KAAK,EAAEsC,SAAS,CAAC;IAC/C;IACA;IACA;IACA,OAAO,KAAK;EAChB;EACAE,kBAAkBA,CAACC,SAAS,EAAE;IAC1B,IAAI,CAACF,mBAAmB,CAACE,SAAS,EAAE,IAAI,CAACzC,KAAK,CAAC;EACnD;EACAuC,mBAAmBA,CAACE,SAAS,EAAEH,SAAS,EAAE;IACtC,MAAMI,OAAO,GAAG,CAAC,CAAC;IAClB,IAAI,CAACC,0BAA0B,CAACF,SAAS,EAAEH,SAAS,EAAEI,OAAO,CAAC;IAC9D,IAAI,CAACE,yBAAyB,CAACF,OAAO,CAAC;IACvC,IAAI,CAACG,0BAA0B,CAACH,OAAO,CAAC;EAC5C;EACAC,0BAA0BA,CAACF,SAAS,EAAEH,SAAS,EAAEI,OAAO,EAAE;IACtD,MAAMI,YAAY,GAAG,CAAC,CAACR,SAAS,CAACS,KAAK;IACtC/B,MAAM,CAACgC,IAAI,CAACV,SAAS,CAAC,CAACW,OAAO,CAACC,OAAO,IAAI;MACtC,IAAI9D,aAAa,CAAC+D,kBAAkB,CAACC,GAAG,CAACF,OAAO,CAAC,EAAE;QAC/C,IAAIT,SAAS,CAACS,OAAO,CAAC,KAAKZ,SAAS,CAACY,OAAO,CAAC,EAAE;UAC3C,IAAIJ,YAAY,EAAE;YACdX,OAAO,CAACkB,GAAG,CAAE,iBAAgBH,OAAQ,oBAAmB,CAAC;UAC7D;UACAR,OAAO,CAACQ,OAAO,CAAC,GAAG;YACfI,aAAa,EAAEb,SAAS,CAACS,OAAO,CAAC;YACjCK,YAAY,EAAEjB,SAAS,CAACY,OAAO;UACnC,CAAC;QACL;MACJ;IACJ,CAAC,CAAC;IACF9D,aAAa,CAACoE,eAAe,CAACP,OAAO,CAACQ,QAAQ,IAAI;MAC9C,IAAIhB,SAAS,CAACgB,QAAQ,CAAC,KAAKnB,SAAS,CAACmB,QAAQ,CAAC,EAAE;QAC7C,IAAIX,YAAY,EAAE;UACdX,OAAO,CAACkB,GAAG,CAAE,iBAAgBI,QAAS,0BAAyB,CAAC;QACpE;QACAf,OAAO,CAACe,QAAQ,CAAC,GAAG;UAChBH,aAAa,EAAEb,SAAS,CAACgB,QAAQ,CAAC;UAClCF,YAAY,EAAEjB,SAAS,CAACmB,QAAQ;QACpC,CAAC;MACL;IACJ,CAAC,CAAC;EACN;EACAC,oBAAoBA,CAAA,EAAG;IACnB,IAAI,IAAI,CAACzD,GAAG,EAAE;MACV,IAAI,CAACA,GAAG,CAAC0D,OAAO,CAAC,CAAC;MAClB,IAAI,CAAC1D,GAAG,GAAG,IAAI;IACnB;IACA,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACE,aAAa,CAACuD,OAAO,CAAC,CAAC;EAChC;EACAC,qBAAqBA,CAAA,EAAG;IACpB,OAAO,IAAI,CAAC5D,KAAK,CAAC6D,mBAAmB,KAAK,IAAI;EAClD;EACAC,0BAA0BA,CAAA,EAAG;IACzB,OAAO,IAAI,CAAC9D,KAAK,CAAC+D,wBAAwB,KAAK,IAAI;EACvD;EACAnB,yBAAyBA,CAACF,OAAO,EAAE;IAC/B,MAAMsB,YAAY,GAAGhD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEyB,OAAO,CAAC;IAC/C,IAAI1B,MAAM,CAACgC,IAAI,CAACgB,YAAY,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;MACtC,MAAMC,kBAAkB,GAAG,CAAC,CAAC;MAC7B,IAAI,CAAC/D,6BAA6B,CAAC8C,OAAO,CAAEkB,yBAAyB,IAAK;QACtE,IAAIH,YAAY,CAACG,yBAAyB,CAAC,EAAE;UACzCD,kBAAkB,CAACC,yBAAyB,CAAC,GAAGH,YAAY,CAACG,yBAAyB,CAAC;UACvF,OAAOH,YAAY,CAACG,yBAAyB,CAAC;QAClD;MACJ,CAAC,CAAC;MACF,IAAInD,MAAM,CAACgC,IAAI,CAACkB,kBAAkB,CAAC,CAACD,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAChE,GAAG,EAAE;QAC1Db,aAAa,CAACgF,eAAe,CAACF,kBAAkB,EAAE,IAAI,CAACjE,GAAG,CAAC;MAC/D;IACJ;IACA,OAAO+D,YAAY;EACvB;EACAnB,0BAA0BA,CAACH,OAAO,EAAE;IAChC,IAAI1B,MAAM,CAACgC,IAAI,CAACN,OAAO,CAAC,CAACuB,MAAM,GAAG,CAAC,EAAE;MACjCI,MAAM,CAACC,UAAU,CAAC,MAAM;QACpB;QACA,IAAI,IAAI,CAACrE,GAAG,EAAE;UACVb,aAAa,CAACgF,eAAe,CAAC1B,OAAO,EAAE,IAAI,CAACzC,GAAG,CAAC;QACpD;MACJ,CAAC,CAAC;IACN;EACJ;AACJ;AACAH,iBAAiB,CAACyE,iCAAiC,GAAG,IAAI,CAAC,CAAC;AAC5DzE,iBAAiB,CAAC0E,YAAY,GAAG;EAC7BT,wBAAwB,EAAE,KAAK;EAC/BF,mBAAmB,EAAE,KAAK;EAC1BvD,0BAA0B,EAAER,iBAAiB,CAACyE;AAClD,CAAC;AACDzE,iBAAiB,CAAC2E,SAAS,GAAG;EAC1B7C,WAAW,EAAErC,SAAS,CAACmF;AAC3B,CAAC;AACDC,aAAa,CAACvF,aAAa,CAACoE,eAAe,EAAEjE,SAAS,CAACqF,IAAI,CAAC;AAC5DD,aAAa,CAACvF,aAAa,CAACyF,kBAAkB,EAAEtF,SAAS,CAACuF,IAAI,CAAC;AAC/DH,aAAa,CAACvF,aAAa,CAAC2F,iBAAiB,EAAExF,SAAS,CAACyF,MAAM,CAAC;AAChEL,aAAa,CAACvF,aAAa,CAAC6F,iBAAiB,EAAE1F,SAAS,CAACmF,MAAM,CAAC;AAChEC,aAAa,CAACvF,aAAa,CAAC8F,gBAAgB,EAAE3F,SAAS,CAAC4F,KAAK,CAAC;AAC9DR,aAAa,CAACvF,aAAa,CAACgG,iBAAiB,EAAE7F,SAAS,CAAC8F,MAAM,CAAC;AAChEV,aAAa,CAACvF,aAAa,CAACkG,mBAAmB,EAAE/F,SAAS,CAACqF,IAAI,CAAC;AAChE,SAASD,aAAaA,CAACY,WAAW,EAAEC,QAAQ,EAAE;EAC1CD,WAAW,CAACtC,OAAO,CAACC,OAAO,IAAI;IAC3BpD,iBAAiB,CAACoD,OAAO,CAAC,GAAGsC,QAAQ;EACzC,CAAC,CAAC;AACN;AACA,MAAM9D,8BAA8B,SAASvC,oBAAoB,CAAC;EAC9DY,WAAWA,CAACyB,WAAW,EAAEpB,aAAa,EAAE;IACpC,KAAK,CAAC,CAAC;IACP,IAAI,CAACoB,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACpB,aAAa,GAAGA,aAAa;EACtC;EACAqF,aAAaA,CAACC,kBAAkB,EAAEC,aAAa,EAAE;IAC7C,IAAI,IAAI,CAACnE,WAAW,CAACsC,0BAA0B,CAAC,CAAC,EAAE;MAC/C,OAAO,IAAIpE,oBAAoB,CAACgG,kBAAkB,EAAE,IAAI,CAAClE,WAAW,EAAE,IAAI,CAACpB,aAAa,EAAEuF,aAAa,CAAC;IAC5G,CAAC,MACI;MACD,OAAO,IAAIhG,iBAAiB,CAAC+F,kBAAkB,EAAE,IAAI,CAACtF,aAAa,EAAEuF,aAAa,CAAC;IACvF;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}