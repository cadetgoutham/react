{"ast":null,"code":"// ag-grid-react v30.0.4\nimport React, { memo, useContext, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext.mjs';\nimport { showJsComp } from '../jsComp.mjs';\nimport { useLayoutEffectOnce } from '../useEffectOnce.mjs';\nimport { CssClasses } from '../utils.mjs';\nconst HeaderGroupCellComp = props => {\n  const {\n    context\n  } = useContext(BeansContext);\n  const [cssClasses, setCssClasses] = useState(new CssClasses());\n  const [cssResizableClasses, setResizableCssClasses] = useState(new CssClasses());\n  const [resizableAriaHidden, setResizableAriaHidden] = useState(\"false\");\n  const [title, setTitle] = useState();\n  const [colId, setColId] = useState();\n  const [ariaExpanded, setAriaExpanded] = useState();\n  const [userCompDetails, setUserCompDetails] = useState();\n  const eGui = useRef(null);\n  const eResize = useRef(null);\n  const {\n    ctrl\n  } = props;\n  useLayoutEffectOnce(() => {\n    const compProxy = {\n      setWidth: width => {\n        if (eGui.current) {\n          eGui.current.style.width = width;\n        }\n      },\n      addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n      setColId: id => setColId(id),\n      setTitle: title => setTitle(title),\n      setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n      setResizableDisplayed: displayed => {\n        setResizableCssClasses(prev => prev.setClass('ag-hidden', !displayed));\n        setResizableAriaHidden(!displayed ? \"true\" : \"false\");\n      },\n      setAriaExpanded: expanded => setAriaExpanded(expanded)\n    };\n    ctrl.setComp(compProxy, eGui.current, eResize.current);\n  });\n  // js comps\n  useLayoutEffect(() => showJsComp(userCompDetails, context, eGui.current), [userCompDetails]);\n  // add drag handling, must be done after component is added to the dom\n  useEffect(() => {\n    if (eGui.current) {\n      ctrl.setDragSource(eGui.current);\n    }\n  }, [userCompDetails]);\n  const className = useMemo(() => 'ag-header-group-cell ' + cssClasses.toString(), [cssClasses]);\n  const resizableClassName = useMemo(() => 'ag-header-cell-resize ' + cssResizableClasses.toString(), [cssResizableClasses]);\n  const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n  const UserCompClass = userCompDetails && userCompDetails.componentClass;\n  return React.createElement(\"div\", {\n    ref: eGui,\n    className: className,\n    title: title,\n    \"col-id\": colId,\n    role: \"columnheader\",\n    tabIndex: -1,\n    \"aria-expanded\": ariaExpanded\n  }, reactUserComp && React.createElement(UserCompClass, Object.assign({}, userCompDetails.params)), React.createElement(\"div\", {\n    ref: eResize,\n    \"aria-hidden\": resizableAriaHidden,\n    className: resizableClassName\n  }));\n};\nexport default memo(HeaderGroupCellComp);","map":{"version":3,"names":["React","memo","useContext","useEffect","useLayoutEffect","useMemo","useRef","useState","BeansContext","showJsComp","useLayoutEffectOnce","CssClasses","HeaderGroupCellComp","props","context","cssClasses","setCssClasses","cssResizableClasses","setResizableCssClasses","resizableAriaHidden","setResizableAriaHidden","title","setTitle","colId","setColId","ariaExpanded","setAriaExpanded","userCompDetails","setUserCompDetails","eGui","eResize","ctrl","compProxy","setWidth","width","current","style","addOrRemoveCssClass","name","on","prev","setClass","id","compDetails","setResizableDisplayed","displayed","expanded","setComp","setDragSource","className","toString","resizableClassName","reactUserComp","componentFromFramework","UserCompClass","componentClass","createElement","ref","role","tabIndex","Object","assign","params"],"sources":["/home/vvdn/React-practice/hello/node_modules/ag-grid-react/lib/reactUi/header/headerGroupCellComp.mjs"],"sourcesContent":["// ag-grid-react v30.0.4\nimport React, { memo, useContext, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext.mjs';\nimport { showJsComp } from '../jsComp.mjs';\nimport { useLayoutEffectOnce } from '../useEffectOnce.mjs';\nimport { CssClasses } from '../utils.mjs';\nconst HeaderGroupCellComp = (props) => {\n    const { context } = useContext(BeansContext);\n    const [cssClasses, setCssClasses] = useState(new CssClasses());\n    const [cssResizableClasses, setResizableCssClasses] = useState(new CssClasses());\n    const [resizableAriaHidden, setResizableAriaHidden] = useState(\"false\");\n    const [title, setTitle] = useState();\n    const [colId, setColId] = useState();\n    const [ariaExpanded, setAriaExpanded] = useState();\n    const [userCompDetails, setUserCompDetails] = useState();\n    const eGui = useRef(null);\n    const eResize = useRef(null);\n    const { ctrl } = props;\n    useLayoutEffectOnce(() => {\n        const compProxy = {\n            setWidth: width => {\n                if (eGui.current) {\n                    eGui.current.style.width = width;\n                }\n            },\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            setColId: id => setColId(id),\n            setTitle: title => setTitle(title),\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            setResizableDisplayed: (displayed) => {\n                setResizableCssClasses(prev => prev.setClass('ag-hidden', !displayed));\n                setResizableAriaHidden(!displayed ? \"true\" : \"false\");\n            },\n            setAriaExpanded: expanded => setAriaExpanded(expanded)\n        };\n        ctrl.setComp(compProxy, eGui.current, eResize.current);\n    });\n    // js comps\n    useLayoutEffect(() => showJsComp(userCompDetails, context, eGui.current), [userCompDetails]);\n    // add drag handling, must be done after component is added to the dom\n    useEffect(() => {\n        if (eGui.current) {\n            ctrl.setDragSource(eGui.current);\n        }\n    }, [userCompDetails]);\n    const className = useMemo(() => 'ag-header-group-cell ' + cssClasses.toString(), [cssClasses]);\n    const resizableClassName = useMemo(() => 'ag-header-cell-resize ' + cssResizableClasses.toString(), [cssResizableClasses]);\n    const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n    const UserCompClass = userCompDetails && userCompDetails.componentClass;\n    return (React.createElement(\"div\", { ref: eGui, className: className, title: title, \"col-id\": colId, role: \"columnheader\", tabIndex: -1, \"aria-expanded\": ariaExpanded },\n        reactUserComp && React.createElement(UserCompClass, Object.assign({}, userCompDetails.params)),\n        React.createElement(\"div\", { ref: eResize, \"aria-hidden\": resizableAriaHidden, className: resizableClassName })));\n};\nexport default memo(HeaderGroupCellComp);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}