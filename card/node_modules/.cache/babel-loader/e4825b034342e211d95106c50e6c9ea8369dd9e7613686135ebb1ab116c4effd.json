{"ast":null,"code":"// ag-grid-react v30.0.4\nimport ReactDOM from \"react-dom\";\nexport const classesList = function () {\n  for (var _len = arguments.length, list = new Array(_len), _key = 0; _key < _len; _key++) {\n    list[_key] = arguments[_key];\n  }\n  const filtered = list.filter(s => s != null && s !== '');\n  return filtered.join(' ');\n};\nexport class CssClasses {\n  constructor() {\n    this.classesMap = {};\n    for (var _len2 = arguments.length, initialClasses = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      initialClasses[_key2] = arguments[_key2];\n    }\n    initialClasses.forEach(className => {\n      this.classesMap[className] = true;\n    });\n  }\n  setClass(className, on) {\n    // important to not make a copy if nothing has changed, so react\n    // won't trigger a render cycle on new object instance\n    const nothingHasChanged = !!this.classesMap[className] == on;\n    if (nothingHasChanged) {\n      return this;\n    }\n    const res = new CssClasses();\n    res.classesMap = Object.assign({}, this.classesMap);\n    res.classesMap[className] = on;\n    return res;\n  }\n  toString() {\n    const res = Object.keys(this.classesMap).filter(key => this.classesMap[key]).join(' ');\n    return res;\n  }\n}\nexport const isComponentStateless = Component => {\n  const hasSymbol = () => typeof Symbol === 'function' && Symbol.for;\n  const getMemoType = () => hasSymbol() ? Symbol.for('react.memo') : 0xead3;\n  return typeof Component === 'function' && !(Component.prototype && Component.prototype.isReactComponent) || typeof Component === 'object' && Component.$$typeof === getMemoType();\n};\n// CreateRoot is only available from React 18, which if used requires us to use flushSync.\nconst createRootAndFlushSyncAvailable = ReactDOM.createRoot != null && ReactDOM.flushSync != null;\n/**\n * Wrapper around flushSync to provide backwards compatibility with React 16-17\n * Also allows us to control via the `useFlushSync` param whether we want to use flushSync or not\n * as we do not want to use flushSync when we are likely to already be in a render cycle\n */\nexport const agFlushSync = (useFlushSync, fn) => {\n  if (createRootAndFlushSyncAvailable && useFlushSync) {\n    ReactDOM.flushSync(fn);\n  } else {\n    fn();\n  }\n};","map":{"version":3,"names":["ReactDOM","classesList","_len","arguments","length","list","Array","_key","filtered","filter","s","join","CssClasses","constructor","classesMap","_len2","initialClasses","_key2","forEach","className","setClass","on","nothingHasChanged","res","Object","assign","toString","keys","key","isComponentStateless","Component","hasSymbol","Symbol","for","getMemoType","prototype","isReactComponent","$$typeof","createRootAndFlushSyncAvailable","createRoot","flushSync","agFlushSync","useFlushSync","fn"],"sources":["/home/vvdn/React-practice/hello/node_modules/ag-grid-react/lib/reactUi/utils.mjs"],"sourcesContent":["// ag-grid-react v30.0.4\nimport ReactDOM from \"react-dom\";\nexport const classesList = (...list) => {\n    const filtered = list.filter(s => s != null && s !== '');\n    return filtered.join(' ');\n};\nexport class CssClasses {\n    constructor(...initialClasses) {\n        this.classesMap = {};\n        initialClasses.forEach(className => {\n            this.classesMap[className] = true;\n        });\n    }\n    setClass(className, on) {\n        // important to not make a copy if nothing has changed, so react\n        // won't trigger a render cycle on new object instance\n        const nothingHasChanged = !!this.classesMap[className] == on;\n        if (nothingHasChanged) {\n            return this;\n        }\n        const res = new CssClasses();\n        res.classesMap = Object.assign({}, this.classesMap);\n        res.classesMap[className] = on;\n        return res;\n    }\n    toString() {\n        const res = Object.keys(this.classesMap).filter(key => this.classesMap[key]).join(' ');\n        return res;\n    }\n}\nexport const isComponentStateless = (Component) => {\n    const hasSymbol = () => typeof Symbol === 'function' && Symbol.for;\n    const getMemoType = () => hasSymbol() ? Symbol.for('react.memo') : 0xead3;\n    return (typeof Component === 'function' && !(Component.prototype && Component.prototype.isReactComponent)) || (typeof Component === 'object' && Component.$$typeof === getMemoType());\n};\n// CreateRoot is only available from React 18, which if used requires us to use flushSync.\nconst createRootAndFlushSyncAvailable = ReactDOM.createRoot != null && ReactDOM.flushSync != null;\n/**\n * Wrapper around flushSync to provide backwards compatibility with React 16-17\n * Also allows us to control via the `useFlushSync` param whether we want to use flushSync or not\n * as we do not want to use flushSync when we are likely to already be in a render cycle\n */\nexport const agFlushSync = (useFlushSync, fn) => {\n    if (createRootAndFlushSyncAvailable && useFlushSync) {\n        ReactDOM.flushSync(fn);\n    }\n    else {\n        fn();\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}