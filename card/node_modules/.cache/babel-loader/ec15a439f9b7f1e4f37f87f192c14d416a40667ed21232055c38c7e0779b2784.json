{"ast":null,"code":"// ag-grid-react v30.0.4\nimport { BaseComponentWrapper, ComponentUtil, CtrlsService, GridCoreCreator, _ } from 'ag-grid-community';\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { NewReactComponent } from '../shared/newReactComponent.mjs';\nimport { PortalManager } from '../shared/portalManager.mjs';\nimport { ReactFrameworkOverrides } from '../shared/reactFrameworkOverrides.mjs';\nimport GridComp from './gridComp.mjs';\nfunction debug(msg, obj) {\n  // console.log(msg, obj);\n}\nexport const AgGridReactUi = props => {\n  var _a, _b;\n  const gridOptionsRef = useRef(null);\n  const eGui = useRef(null);\n  const portalManager = useRef(null);\n  const destroyFuncs = useRef([]);\n  const whenReadyFuncs = useRef([]);\n  //prevProps\n  const prevProps = useRef(props);\n  const ready = useRef(false);\n  const [context, setContext] = useState(undefined);\n  const checkForDeprecations = useCallback(props => {\n    if (props.rowDataChangeDetectionStrategy) {\n      _.doOnce(() => console.warn('AG Grid: Since v29 rowDataChangeDetectionStrategy has been deprecated. Row data property changes will be compared by reference via triple equals ===. See https://ag-grid.com/react-data-grid/react-hooks/'), 'rowDataChangeDetectionStrategy_Deprecation');\n    }\n  }, []);\n  // Hook to enable Portals to be displayed via the PortalManager\n  const [, setPortalRefresher] = useState(0);\n  useLayoutEffect(() => {\n    const modules = props.modules || [];\n    if (!portalManager.current) {\n      portalManager.current = new PortalManager(() => setPortalRefresher(prev => prev + 1), props.componentWrappingElement, props.maxComponentCreationTimeMs);\n      destroyFuncs.current.push(() => {\n        var _a;\n        (_a = portalManager.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        portalManager.current = null;\n      });\n    }\n    const gridParams = {\n      providedBeanInstances: {\n        frameworkComponentWrapper: new ReactFrameworkComponentWrapper(portalManager.current)\n      },\n      modules,\n      frameworkOverrides: new ReactFrameworkOverrides(true)\n    };\n    gridOptionsRef.current = props.gridOptions || {};\n    gridOptionsRef.current = ComponentUtil.copyAttributesToGridOptions(gridOptionsRef.current, props);\n    checkForDeprecations(props);\n    const createUiCallback = context => {\n      setContext(context);\n      destroyFuncs.current.push(() => {\n        context.destroy();\n      });\n      // because React is Async, we need to wait for the UI to be initialised before exposing the API's\n      const ctrlsService = context.getBean(CtrlsService.NAME);\n      ctrlsService.whenReady(() => {\n        debug('AgGridReactUi. ctlService is ready');\n        if (context.isDestroyed()) {\n          return;\n        }\n        if (gridOptionsRef.current) {\n          const api = gridOptionsRef.current.api;\n          if (api) {\n            if (props.setGridApi) {\n              props.setGridApi(api, gridOptionsRef.current.columnApi);\n            }\n            destroyFuncs.current.push(() => {\n              // Take local reference to api above so correct api gets destroyed on unmount.\n              api.destroy();\n            });\n          }\n        }\n      });\n    };\n    // this callback adds to ctrlsService.whenReady(), just like above, however because whenReady() executes\n    // funcs in the order they were received, we know adding items here will be AFTER the grid has set columns\n    // and data. this is because GridCoreCreator sets these between calling createUiCallback and acceptChangesCallback\n    const acceptChangesCallback = context => {\n      const ctrlsService = context.getBean(CtrlsService.NAME);\n      ctrlsService.whenReady(() => {\n        debug('AgGridReactUi.acceptChangesCallback');\n        whenReadyFuncs.current.forEach(f => f());\n        whenReadyFuncs.current.length = 0;\n        ready.current = true;\n      });\n    };\n    const gridCoreCreator = new GridCoreCreator();\n    gridCoreCreator.create(eGui.current, gridOptionsRef.current, createUiCallback, acceptChangesCallback, gridParams);\n    return () => {\n      debug('AgGridReactUi.destroy');\n      destroyFuncs.current.forEach(f => f());\n      destroyFuncs.current.length = 0;\n    };\n  }, []);\n  const style = useMemo(() => {\n    return Object.assign({\n      height: '100%'\n    }, props.containerStyle || {});\n  }, [props.containerStyle]);\n  const processWhenReady = useCallback(func => {\n    if (ready.current) {\n      debug('AgGridReactUi.processWhenReady sync');\n      func();\n    } else {\n      debug('AgGridReactUi.processWhenReady async');\n      whenReadyFuncs.current.push(func);\n    }\n  }, []);\n  useEffect(() => {\n    const changes = {};\n    extractGridPropertyChanges(prevProps.current, props, changes);\n    prevProps.current = props;\n    processWhenReady(() => {\n      var _a;\n      if ((_a = gridOptionsRef.current) === null || _a === void 0 ? void 0 : _a.api) {\n        ComponentUtil.processOnChange(changes, gridOptionsRef.current.api);\n      }\n    });\n  }, [props]);\n  return React.createElement(\"div\", {\n    style: style,\n    className: props.className,\n    ref: eGui\n  }, context && !context.isDestroyed() ? React.createElement(GridComp, {\n    context: context\n  }) : null, (_b = (_a = portalManager.current) === null || _a === void 0 ? void 0 : _a.getPortals()) !== null && _b !== void 0 ? _b : null);\n};\nclass ReactFrameworkComponentWrapper extends BaseComponentWrapper {\n  constructor(parent) {\n    super();\n    this.parent = parent;\n  }\n  createWrapper(UserReactComponent, componentType) {\n    return new NewReactComponent(UserReactComponent, this.parent, componentType);\n  }\n}\nfunction extractGridPropertyChanges(prevProps, nextProps, changes) {\n  const debugLogging = !!nextProps.debug;\n  Object.keys(nextProps).forEach(propKey => {\n    if (ComponentUtil.ALL_PROPERTIES_SET.has(propKey)) {\n      if (prevProps[propKey] !== nextProps[propKey]) {\n        if (debugLogging) {\n          console.log(` agGridReact: [${propKey}] property changed`);\n        }\n        changes[propKey] = {\n          previousValue: prevProps[propKey],\n          currentValue: nextProps[propKey]\n        };\n      }\n    }\n  });\n  ComponentUtil.EVENT_CALLBACKS.forEach(funcName => {\n    if (prevProps[funcName] !== nextProps[funcName]) {\n      if (debugLogging) {\n        console.log(`agGridReact: [${funcName}] event callback changed`);\n      }\n      changes[funcName] = {\n        previousValue: prevProps[funcName],\n        currentValue: nextProps[funcName]\n      };\n    }\n  });\n}","map":{"version":3,"names":["BaseComponentWrapper","ComponentUtil","CtrlsService","GridCoreCreator","_","React","useCallback","useEffect","useLayoutEffect","useMemo","useRef","useState","NewReactComponent","PortalManager","ReactFrameworkOverrides","GridComp","debug","msg","obj","AgGridReactUi","props","_a","_b","gridOptionsRef","eGui","portalManager","destroyFuncs","whenReadyFuncs","prevProps","ready","context","setContext","undefined","checkForDeprecations","rowDataChangeDetectionStrategy","doOnce","console","warn","setPortalRefresher","modules","current","prev","componentWrappingElement","maxComponentCreationTimeMs","push","destroy","gridParams","providedBeanInstances","frameworkComponentWrapper","ReactFrameworkComponentWrapper","frameworkOverrides","gridOptions","copyAttributesToGridOptions","createUiCallback","ctrlsService","getBean","NAME","whenReady","isDestroyed","api","setGridApi","columnApi","acceptChangesCallback","forEach","f","length","gridCoreCreator","create","style","Object","assign","height","containerStyle","processWhenReady","func","changes","extractGridPropertyChanges","processOnChange","createElement","className","ref","getPortals","constructor","parent","createWrapper","UserReactComponent","componentType","nextProps","debugLogging","keys","propKey","ALL_PROPERTIES_SET","has","log","previousValue","currentValue","EVENT_CALLBACKS","funcName"],"sources":["/home/vvdn/React-practice/hello/node_modules/ag-grid-react/lib/reactUi/agGridReactUi.mjs"],"sourcesContent":["// ag-grid-react v30.0.4\nimport { BaseComponentWrapper, ComponentUtil, CtrlsService, GridCoreCreator, _ } from 'ag-grid-community';\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { NewReactComponent } from '../shared/newReactComponent.mjs';\nimport { PortalManager } from '../shared/portalManager.mjs';\nimport { ReactFrameworkOverrides } from '../shared/reactFrameworkOverrides.mjs';\nimport GridComp from './gridComp.mjs';\nfunction debug(msg, obj) {\n    // console.log(msg, obj);\n}\nexport const AgGridReactUi = (props) => {\n    var _a, _b;\n    const gridOptionsRef = useRef(null);\n    const eGui = useRef(null);\n    const portalManager = useRef(null);\n    const destroyFuncs = useRef([]);\n    const whenReadyFuncs = useRef([]);\n    //prevProps\n    const prevProps = useRef(props);\n    const ready = useRef(false);\n    const [context, setContext] = useState(undefined);\n    const checkForDeprecations = useCallback((props) => {\n        if (props.rowDataChangeDetectionStrategy) {\n            _.doOnce(() => console.warn('AG Grid: Since v29 rowDataChangeDetectionStrategy has been deprecated. Row data property changes will be compared by reference via triple equals ===. See https://ag-grid.com/react-data-grid/react-hooks/'), 'rowDataChangeDetectionStrategy_Deprecation');\n        }\n    }, []);\n    // Hook to enable Portals to be displayed via the PortalManager\n    const [, setPortalRefresher] = useState(0);\n    useLayoutEffect(() => {\n        const modules = props.modules || [];\n        if (!portalManager.current) {\n            portalManager.current = new PortalManager(() => setPortalRefresher((prev) => prev + 1), props.componentWrappingElement, props.maxComponentCreationTimeMs);\n            destroyFuncs.current.push(() => {\n                var _a;\n                (_a = portalManager.current) === null || _a === void 0 ? void 0 : _a.destroy();\n                portalManager.current = null;\n            });\n        }\n        const gridParams = {\n            providedBeanInstances: {\n                frameworkComponentWrapper: new ReactFrameworkComponentWrapper(portalManager.current),\n            },\n            modules,\n            frameworkOverrides: new ReactFrameworkOverrides(true),\n        };\n        gridOptionsRef.current = props.gridOptions || {};\n        gridOptionsRef.current = ComponentUtil.copyAttributesToGridOptions(gridOptionsRef.current, props);\n        checkForDeprecations(props);\n        const createUiCallback = (context) => {\n            setContext(context);\n            destroyFuncs.current.push(() => {\n                context.destroy();\n            });\n            // because React is Async, we need to wait for the UI to be initialised before exposing the API's\n            const ctrlsService = context.getBean(CtrlsService.NAME);\n            ctrlsService.whenReady(() => {\n                debug('AgGridReactUi. ctlService is ready');\n                if (context.isDestroyed()) {\n                    return;\n                }\n                if (gridOptionsRef.current) {\n                    const api = gridOptionsRef.current.api;\n                    if (api) {\n                        if (props.setGridApi) {\n                            props.setGridApi(api, gridOptionsRef.current.columnApi);\n                        }\n                        destroyFuncs.current.push(() => {\n                            // Take local reference to api above so correct api gets destroyed on unmount.\n                            api.destroy();\n                        });\n                    }\n                }\n            });\n        };\n        // this callback adds to ctrlsService.whenReady(), just like above, however because whenReady() executes\n        // funcs in the order they were received, we know adding items here will be AFTER the grid has set columns\n        // and data. this is because GridCoreCreator sets these between calling createUiCallback and acceptChangesCallback\n        const acceptChangesCallback = (context) => {\n            const ctrlsService = context.getBean(CtrlsService.NAME);\n            ctrlsService.whenReady(() => {\n                debug('AgGridReactUi.acceptChangesCallback');\n                whenReadyFuncs.current.forEach((f) => f());\n                whenReadyFuncs.current.length = 0;\n                ready.current = true;\n            });\n        };\n        const gridCoreCreator = new GridCoreCreator();\n        gridCoreCreator.create(eGui.current, gridOptionsRef.current, createUiCallback, acceptChangesCallback, gridParams);\n        return () => {\n            debug('AgGridReactUi.destroy');\n            destroyFuncs.current.forEach((f) => f());\n            destroyFuncs.current.length = 0;\n        };\n    }, []);\n    const style = useMemo(() => {\n        return Object.assign({ height: '100%' }, (props.containerStyle || {}));\n    }, [props.containerStyle]);\n    const processWhenReady = useCallback((func) => {\n        if (ready.current) {\n            debug('AgGridReactUi.processWhenReady sync');\n            func();\n        }\n        else {\n            debug('AgGridReactUi.processWhenReady async');\n            whenReadyFuncs.current.push(func);\n        }\n    }, []);\n    useEffect(() => {\n        const changes = {};\n        extractGridPropertyChanges(prevProps.current, props, changes);\n        prevProps.current = props;\n        processWhenReady(() => {\n            var _a;\n            if ((_a = gridOptionsRef.current) === null || _a === void 0 ? void 0 : _a.api) {\n                ComponentUtil.processOnChange(changes, gridOptionsRef.current.api);\n            }\n        });\n    }, [props]);\n    return (React.createElement(\"div\", { style: style, className: props.className, ref: eGui },\n        context && !context.isDestroyed() ? React.createElement(GridComp, { context: context }) : null, (_b = (_a = portalManager.current) === null || _a === void 0 ? void 0 : _a.getPortals()) !== null && _b !== void 0 ? _b : null));\n};\nclass ReactFrameworkComponentWrapper extends BaseComponentWrapper {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n    }\n    createWrapper(UserReactComponent, componentType) {\n        return new NewReactComponent(UserReactComponent, this.parent, componentType);\n    }\n}\nfunction extractGridPropertyChanges(prevProps, nextProps, changes) {\n    const debugLogging = !!nextProps.debug;\n    Object.keys(nextProps).forEach((propKey) => {\n        if (ComponentUtil.ALL_PROPERTIES_SET.has(propKey)) {\n            if (prevProps[propKey] !== nextProps[propKey]) {\n                if (debugLogging) {\n                    console.log(` agGridReact: [${propKey}] property changed`);\n                }\n                changes[propKey] = {\n                    previousValue: prevProps[propKey],\n                    currentValue: nextProps[propKey],\n                };\n            }\n        }\n    });\n    ComponentUtil.EVENT_CALLBACKS.forEach((funcName) => {\n        if (prevProps[funcName] !== nextProps[funcName]) {\n            if (debugLogging) {\n                console.log(`agGridReact: [${funcName}] event callback changed`);\n            }\n            changes[funcName] = {\n                previousValue: prevProps[funcName],\n                currentValue: nextProps[funcName],\n            };\n        }\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}